{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/profile-management/profile-services/profile-services.service\";\nimport * as i3 from \"src/app/GobalAPIService/global-service-service/PreviewService\";\nimport * as i4 from \"src/app/contact-management/contact-management-service/conatct-services.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ngx-pagination\";\nimport * as i8 from \"ng2-search-filter\";\n\nfunction CountallContactComponent_input_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 31);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_input_10_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.selectAll();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_strong_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 32);\n    i0.ɵɵtext(1, \" Select All\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.archiveblacklistContact(\"blacklist\");\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \" Blacklist\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountallContactComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.archiveblacklistContact(\"archive\");\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \" Archive\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountallContactComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.archiveblacklistContact(\"unsubscribe\");\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \" Unsubscribe\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountallContactComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.delete();\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \" Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountallContactComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"label\", 38)(3, \"h5\");\n    i0.ɵɵtext(4, \"Filter\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"select\", 39);\n    i0.ɵɵlistener(\"change\", function CountallContactComponent_div_17_Template_select_change_5_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.filterData();\n    })(\"ngModelChange\", function CountallContactComponent_div_17_Template_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.filterFlg = $event;\n    });\n    i0.ɵɵelementStart(6, \"option\", 40);\n    i0.ɵɵtext(7, \"All\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\", 41);\n    i0.ɵɵtext(9, \"Archive\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 42);\n    i0.ɵɵtext(11, \"Blacklist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 43);\n    i0.ɵɵtext(13, \"Unsubscribe\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.filterFlg);\n  }\n}\n\nfunction CountallContactComponent_div_19_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_div_19_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.loadingMessage();\n    });\n    i0.ɵɵtext(1, \"Download \");\n    i0.ɵɵelement(2, \"span\", 52);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_div_19_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_div_19_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.activeDeactive();\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \" Download \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CountallContactComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"select\", 45);\n    i0.ɵɵlistener(\"ngModelChange\", function CountallContactComponent_div_19_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.activedeactive = $event;\n    });\n    i0.ɵɵelementStart(2, \"option\", 46);\n    i0.ɵɵtext(3, \"Select file type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"option\", 47);\n    i0.ɵɵtext(5, \".CSV\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"option\", 48);\n    i0.ɵɵtext(7, \".XLSX\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 37);\n    i0.ɵɵtemplate(9, CountallContactComponent_div_19_button_9_Template, 3, 0, \"button\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, CountallContactComponent_div_19_button_10_Template, 3, 0, \"button\", 50);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.activedeactive);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.countViewList != null && ctx_r7.countViewList.length != 0 && ctx_r7.itrationCount != 1 && ctx_r7.itrationCount != undefined && ctx_r7.itrationCount != null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.itrationCount == 1 || ctx_r7.itrationCount == undefined || ctx_r7.itrationCount == null);\n  }\n}\n\nfunction CountallContactComponent_th_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 54);\n    i0.ɵɵtext(1, \"Select\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 55)(2, \"td\", 55)(3, \"td\", 55);\n    i0.ɵɵelementStart(4, \"div\")(5, \"td\", 55)(6, \"span\", 56)(7, \"h5\");\n    i0.ɵɵtext(8, \"Please wait.....\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementStart(10, \"div\", 57)(11, \"div\", 58)(12, \"span\", 59);\n    i0.ɵɵtext(13, \"Please wait\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 59);\n    i0.ɵɵtext(15, \"Loading...\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 54)(1, \"input\", 62);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_tr_41_td_1_Template_input_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const i_r35 = i0.ɵɵnextContext().index;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.toggleSelection($event, i_r35);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const contact_r34 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"check_\", contact_r34.customerClientId, \"\");\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Y\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"N\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Y\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"N\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Y\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"N\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_tr_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 60);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_tr_41_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const i_r35 = restoredCtx.index;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.setClickedRow(i_r35);\n    });\n    i0.ɵɵtemplate(1, CountallContactComponent_tr_41_td_1_Template, 2, 1, \"td\", 20);\n    i0.ɵɵelementStart(2, \"td\")(3, \"a\", 61);\n    i0.ɵɵlistener(\"click\", function CountallContactComponent_tr_41_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const contact_r34 = restoredCtx.$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.redirectToEditContact(contact_r34.originalEmailId);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, CountallContactComponent_tr_41_td_11_Template, 2, 0, \"td\", 21);\n    i0.ɵɵtemplate(12, CountallContactComponent_tr_41_td_12_Template, 2, 0, \"td\", 21);\n    i0.ɵɵtemplate(13, CountallContactComponent_tr_41_td_13_Template, 2, 0, \"td\", 21);\n    i0.ɵɵtemplate(14, CountallContactComponent_tr_41_td_14_Template, 2, 0, \"td\", 21);\n    i0.ɵɵtemplate(15, CountallContactComponent_tr_41_td_15_Template, 2, 0, \"td\", 21);\n    i0.ɵɵtemplate(16, CountallContactComponent_tr_41_td_16_Template, 2, 0, \"td\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r34 = ctx.$implicit;\n    const i_r35 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r35 == ctx_r10.selectedRow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.countclkId == \"allcount\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(contact_r34.originalEmailId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r34.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r34.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r34.mobileNo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.blacklist == \"1\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.blacklist == null || contact_r34.blacklist == \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.archive == \"1\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.archive == \"0\" || contact_r34.archive == null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.unsubscribed == \"1\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contact_r34.unsubscribed == \"0\" || contact_r34.unsubscribed == null);\n  }\n}\n\nfunction CountallContactComponent_div_51_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 64);\n    i0.ɵɵtext(1, \" Please enter value greater than 0.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CountallContactComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CountallContactComponent_div_51_p_1_Template, 2, 0, \"p\", 63);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r11 = i0.ɵɵreference(50);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r11.errors == null ? null : _r11.errors.pattern);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    itemsPerPage: a0,\n    currentPage: a1\n  };\n};\n\nexport let CountallContactComponent = /*#__PURE__*/(() => {\n  class CountallContactComponent {\n    constructor(router, profileServicesService, previewService, conatctServicesService) {\n      this.router = router;\n      this.profileServicesService = profileServicesService;\n      this.previewService = previewService;\n      this.conatctServicesService = conatctServicesService;\n      this.term = \"\"; //Pagination\n\n      this.p = 1;\n      this.showData = {\n        rowsPerPage: 5\n      };\n      this.filterFlg = \"\"; // Select filter \n\n      this.pageTitile = \"Contact Details\";\n      this.selectFilter = null;\n      this.filter = ['.CSV', '.XLSX / .XLS'];\n      this.allContactData = [];\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.blackList = [];\n      this.customerClientList = [];\n      this.downloadCustomerData = [];\n      this.alldownloadableData = [];\n      this.countallData = {};\n      this.archiveCamp = {};\n      this.dataloadingFlg = 0;\n      this.dashBoradCount = 0;\n      this.deletecontactList = [];\n      this.deletecontact = {};\n      this.itrationCount = null;\n      this.groupData = this.organise(this.downloadCustomerData);\n    }\n\n    ngOnInit() {\n      this.countclkId = sessionStorage.getItem(\"countClickId\");\n      this.dashBoradCount = Number(sessionStorage.getItem(\"dashBoradCount\"));\n\n      if (this.countclkId != null && this.countclkId != undefined && this.countclkId != \"\") {\n        if (this.countclkId == \"allcount\") {\n          this.pageTitile = \"All Contact Details\"; // this.getdashboardAllContact();\n\n          this.allContactPagination();\n        } else if (this.countclkId == \"opencount\") {\n          this.pageTitile = \"Open Contact Details\";\n          this.getdashboardOpenContact();\n        } else if (this.countclkId == \"clickCount\") {\n          this.pageTitile = \"Click Contact Details\";\n          this.getdashboardClickContact();\n        } else if (this.countclkId == \"blackcount\") {\n          this.pageTitile = \"Blacklisted Contact Details\";\n          this.getdashboardBlacklistedContact();\n        } else if (this.countclkId == \"hardbounce\") {\n          this.pageTitile = \"Hard Bounce Contact Details\";\n          this.getdashboardhardBounceContact();\n        }\n      } else {\n        this.router.navigate(['/dashboard']);\n      }\n\n      this.activedeactive = 0;\n    }\n\n    setClickedRow(index) {\n      this.selectedRow = index;\n    }\n\n    selectAll() {\n      if ($(\"#allcheck\").is(\":checked\")) {\n        for (let i in this.countViewList) {\n          $(\"#check_\" + this.countViewList[i].customerClientId).prop(\"checked\", true);\n        }\n      } else {\n        for (let i in this.countViewList) {\n          $(\"#check_\" + this.countViewList[i].customerClientId).prop(\"checked\", false);\n        }\n      }\n    }\n\n    toggleSelection(event, i) {// this.checkboxes[i] = event.target.checked;\n    } // all count using spirng pagination\n\n\n    allContactPagination() {\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.alldownloadableData = [];\n      let startNo = 0;\n      let size = 500;\n      this.itrationCount = 1;\n      let count = Number(this.dashBoradCount);\n      let itration = Math.ceil(count / size);\n\n      for (var i = 0; i <= itration; i++) {\n        this.itrationCount++;\n\n        if (i != 0) {\n          startNo = size + startNo;\n        }\n\n        let resp = this.profileServicesService.getPaginationdashboardAllContact(startNo, size, sessionStorage.getItem(\"customerId\"));\n        resp.subscribe(data => {\n          this.itrationCount--;\n\n          if (data != null && data != \"\") {\n            for (let i in data) {\n              this.alldownloadableData.push(data[i]);\n              this.countallData = {}; // if (data[i].archive != '1' && data[i].blacklist != '1') {\n\n              this.countallData.originalEmailId = data[i].originalEmailId;\n              this.countallData.customerClientId = data[i].customerClientId;\n              this.countallData.listClientMapSkey = data[i].listClientMapSkey;\n              this.countallData.firstName = data[i].firstName;\n              this.countallData.lastName = data[i].lastName;\n              this.countallData.mobileNo = data[i].mobileNo;\n              this.countallData.dob = data[i].dob;\n              this.countallData.blacklist = data[i].blacklist;\n              this.countallData.archive = data[i].archive;\n              this.countallData.unsubscribed = data[i].unsubscribed;\n              this.countallData.listId = data[i].listId;\n              this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n              this.OrigincountViewList.push(JSON.parse(JSON.stringify(this.countallData))); // }\n            }\n          }\n        });\n      }\n    } // all count\n    // getdashboardAllContact() {\n    //   this.countViewList = [];\n    //   this.alldownloadableData = [];\n    //   var firstId = 0;\n    //   var lastId = 0;\n    //   var Total = 0;\n    //   this.itrationCount = 0;\n    //   let resp1 = this.profileServicesService.getMapMaxAndMin(sessionStorage.getItem(\"customerId\"))\n    //   resp1.subscribe(data => {\n    //     if (data != null && data != \"\") {\n    //       this.itrationCount = 1;\n    //       firstId = data[0].listClientMapId;\n    //       lastId = firstId;\n    //       Total = data[1].listClientMapId;\n    //       for (var i = 0; firstId <= Total; firstId = lastId + 1) {\n    //         lastId = lastId + 500;\n    //         this.itrationCount++;\n    //         let resp = this.profileServicesService.getdashboardAllContact(firstId, lastId, sessionStorage.getItem(\"customerId\"));\n    //         resp.subscribe(data => {\n    //           this.itrationCount--;\n    //           if (data != null && data != \"\") {\n    //             for (let i in data) {\n    //               this.alldownloadableData.push(data[i]);\n    //               this.countallData = {};\n    //               if (data[i].archive != '1' && data[i].blacklist != '1') {\n    //                 this.countallData.originalEmailId = data[i].customerClient.originalEmailId;\n    //                 this.countallData.customerClientId = data[i].customerClient.customerClientId;\n    //                 this.countallData.listClientMapSkey = data[i].listClientMapSkey;\n    //                 this.countallData.firstName = data[i].customerClient.firstName;\n    //                 this.countallData.lastName = data[i].customerClient.lastName;\n    //                 this.countallData.mobileNo = data[i].customerClient.mobileNo;\n    //                 this.countallData.dob = data[i].customerClient.dob;\n    //                 this.countallData.listId = data[i].listId;\n    //                 this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n    //               }\n    //             }\n    //           }\n    //         });\n    //       }\n    //     }\n    //   });\n    // }\n\n\n    loadingMessage() {\n      Swal.fire(\"Please wait while data loading...!\");\n    }\n\n    filterData() {\n      this.countViewList = [];\n\n      for (let i in this.OrigincountViewList) {\n        if (this.filterFlg === \"Blacklist\" && this.OrigincountViewList[i].blacklist == '1') {\n          this.countViewList.push(this.OrigincountViewList[i]);\n        } else if (this.filterFlg === \"Archive\" && this.OrigincountViewList[i].archive == '1') {\n          this.countViewList.push(this.OrigincountViewList[i]);\n        } else if (this.filterFlg === \"Unsubscribe\" && this.OrigincountViewList[i].unsubscribed == '1') {\n          this.countViewList.push(this.OrigincountViewList[i]);\n        }\n\n        if (this.filterFlg === \"\" || this.filterFlg === \" \") {\n          this.countViewList.push(this.OrigincountViewList[i]);\n        }\n      }\n    } // open count\n\n\n    getdashboardOpenContact() {\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.alldownloadableData = [];\n      let startNo = 0;\n      let size = 500;\n      this.itrationCount = 1;\n      let count = Number(this.dashBoradCount);\n      let itration = Math.ceil(count / size);\n\n      for (var i = 0; i < itration; i++) {\n        this.itrationCount++;\n\n        if (i != 0) {\n          startNo = size + startNo;\n        }\n\n        let resp = this.profileServicesService.getdashboardOpenContact(startNo, size, sessionStorage.getItem(\"customerId\"));\n        resp.subscribe(data => {\n          this.itrationCount--;\n\n          if (data != null && data != \"\") {\n            for (let i in data) {\n              this.alldownloadableData.push(data[i]);\n              this.countallData = {};\n\n              if (data[i].archive != '1' && data[i].blacklist != '1') {\n                this.countallData.originalEmailId = data[i].customerClient.originalEmailId;\n                this.countallData.customerClientId = data[i].customerClient.customerClientId;\n                this.countallData.firstName = data[i].customerClient.firstName;\n                this.countallData.lastName = data[i].customerClient.lastName;\n                this.countallData.mobileNo = data[i].customerClient.mobileNo;\n                this.countallData.dob = data[i].customerClient.dob;\n                this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n                this.OrigincountViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n              }\n            }\n          }\n        });\n      }\n    } // open count\n\n\n    getdashboardClickContact() {\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.alldownloadableData = [];\n      this.itrationCount = 1;\n      let startNo = 0;\n      let size = 500;\n      let count = Number(this.dashBoradCount);\n      let itration = Math.ceil(count / size);\n\n      for (var i = 0; i < itration; i++) {\n        this.itrationCount++;\n\n        if (i != 0) {\n          startNo = size + startNo;\n        }\n\n        let resp = this.profileServicesService.getdashboardClickContact(startNo, size, sessionStorage.getItem(\"customerId\"));\n        resp.subscribe(data => {\n          this.itrationCount--;\n\n          if (data != null && data != \"\") {\n            for (let i in data) {\n              this.alldownloadableData.push(data[i]);\n              this.countallData = {};\n\n              if (data[i].archive != '1' && data[i].blacklist != '1') {\n                this.countallData.originalEmailId = data[i].customerClient.originalEmailId;\n                this.countallData.customerClientId = data[i].customerClient.customerClientId;\n                this.countallData.firstName = data[i].customerClient.firstName;\n                this.countallData.lastName = data[i].customerClient.lastName;\n                this.countallData.mobileNo = data[i].customerClient.mobileNo;\n                this.countallData.dob = data[i].customerClient.dob;\n                this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n                this.OrigincountViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n              }\n            }\n          }\n        });\n      }\n    } // blacklisted count view\n\n\n    getdashboardBlacklistedContact() {\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.alldownloadableData = [];\n      this.itrationCount = 1;\n      let startNo = 0;\n      let size = 500;\n      let count = Number(this.dashBoradCount);\n      let itration = Math.ceil(count / size);\n\n      for (var i = 0; i < itration; i++) {\n        this.itrationCount++;\n\n        if (i != 0) {\n          startNo = size + startNo;\n        }\n\n        let resp = this.profileServicesService.getdashboardBlacklistedContact(startNo, size, sessionStorage.getItem(\"customerId\"));\n        resp.subscribe(data => {\n          this.itrationCount--;\n\n          if (data != null && data != \"\") {\n            for (let i in data) {\n              this.alldownloadableData.push(data[i]);\n              this.countallData = {};\n\n              if (data[i].blacklist == '1') {\n                this.countallData.originalEmailId = data[i].originalEmailId;\n                this.countallData.customerClientId = data[i].customerClientId;\n                this.countallData.firstName = data[i].firstName;\n                this.countallData.lastName = data[i].lastName;\n                this.countallData.mobileNo = data[i].mobileNo;\n                this.countallData.dob = data[i].dob;\n                this.countallData.blacklist = data[i].blacklist;\n                this.countallData.archive = data[i].archive;\n                this.countallData.unsubscribed = data[i].unsubscribed;\n                this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n                this.OrigincountViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n              }\n            }\n          }\n        });\n      }\n    } // hard bounce  \n    // blacklisted count view\n\n\n    getdashboardhardBounceContact() {\n      this.countViewList = [];\n      this.OrigincountViewList = [];\n      this.alldownloadableData = [];\n      let startNo = 0;\n      this.itrationCount = 1;\n      let size = 500;\n      let count = Number(this.dashBoradCount);\n      let itration = Math.ceil(count / size);\n\n      for (var i = 0; i < itration; i++) {\n        this.itrationCount++;\n\n        if (i != 0) {\n          startNo = size + startNo;\n        }\n\n        let resp = this.profileServicesService.getdashboardhardBounceContact(startNo, size, sessionStorage.getItem(\"customerId\"));\n        resp.subscribe(data => {\n          this.itrationCount--;\n\n          if (data != null && data != \"\") {\n            for (let i in data) {\n              this.alldownloadableData.push(data[i]);\n              this.countallData = {};\n\n              if (data[i].archive != '1' && data[i].blacklist != '1') {\n                this.countallData.originalEmailId = data[i].customerClient.originalEmailId;\n                this.countallData.customerClientId = data[i].customerClient.customerClientId;\n                this.countallData.firstName = data[i].customerClient.firstName;\n                this.countallData.lastName = data[i].customerClient.lastName;\n                this.countallData.mobileNo = data[i].customerClient.mobileNo;\n                this.countallData.dob = data[i].customerClient.dob;\n                this.countViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n                this.OrigincountViewList.push(JSON.parse(JSON.stringify(this.countallData)));\n              }\n            }\n          }\n        });\n      }\n    } // edit contact\n\n\n    redirectToEditContact(originalEmailId) {\n      sessionStorage.setItem('originalEmailId', originalEmailId);\n      this.previewService.commingFrom = \"Dashboard\";\n      this.router.navigate(['/edit-contact']);\n    } // new changes\n\n\n    archiveblacklistContact(value) {\n      this.archiveCamp = {};\n      this.archiveList = [];\n\n      for (let i in this.countViewList) {\n        if ($(\"#check_\" + this.countViewList[i].customerClientId).is(\":checked\")) {\n          this.archiveCamp.customerClientId = JSON.parse(JSON.stringify(this.countViewList[i].customerClientId));\n          this.archiveCamp.listId = JSON.parse(JSON.stringify(this.countViewList[i].listId));\n\n          if (value == \"archive\") {\n            this.archiveCamp.archive = \"1\";\n            this.archiveCamp.action = \"archive\";\n          } else if (value == \"unsubscribe\") {\n            this.archiveCamp.unsubscribed = \"1\";\n            this.archiveCamp.action = \"unsubscribe\";\n          } else {\n            this.archiveCamp.blacklist = \"1\";\n            this.archiveCamp.action = \"blacklist\";\n          }\n\n          this.archiveCamp.customerId = sessionStorage.getItem(\"customerId\");\n          this.archiveList.push(JSON.parse(JSON.stringify(this.archiveCamp)));\n        }\n      }\n\n      if (this.archiveList.length != 0) {\n        if (value == \"archive\") {\n          Swal.fire({\n            title: this.archiveList.length + ' record selected !',\n            text: \"Are you sure want to archive!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Archive it!'\n          }).then(result => {\n            if (result.isConfirmed) {\n              let resp = this.conatctServicesService.blockArchiveContactList(this.archiveList, value);\n              resp.subscribe(data => {\n                if (data != 0) {\n                  // this.allContactPagination();\n                  for (let i in this.OrigincountViewList) {\n                    if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).is(\":checked\")) {\n                      if (value == \"archive\") {\n                        this.OrigincountViewList[i].archive = \"1\";\n                      } else if (value == \"unsubscribe\") {\n                        this.OrigincountViewList[i].unsubscribed = \"1\";\n                      } else {\n                        this.OrigincountViewList[i].blacklist = \"1\";\n                      }\n\n                      if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", true) || $(\"#allcheck\").is(\":checked\") == true) {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      } else {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      }\n                    }\n                  }\n\n                  Swal.fire('Archive!', 'Conatct has been archived', 'success');\n                  this.filterData();\n                }\n              });\n            }\n          });\n        } else if (value == \"unsubscribe\") {\n          Swal.fire({\n            title: this.archiveList.length + ' record selected !',\n            text: \"Are you sure want to unsubscribe!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Unsubscribe it!'\n          }).then(result => {\n            if (result.isConfirmed) {\n              let resp = this.conatctServicesService.blockArchiveContactList(this.archiveList, value);\n              resp.subscribe(data => {\n                if (data != 0) {\n                  // this.allContactPagination();\n                  for (let i in this.OrigincountViewList) {\n                    if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).is(\":checked\")) {\n                      if (value == \"archive\") {\n                        this.OrigincountViewList[i].archive = \"1\";\n                      }\n\n                      if (value == \"unsubscribe\") {\n                        this.OrigincountViewList[i].unsubscribed = \"1\";\n                      } else {\n                        this.OrigincountViewList[i].blacklist = \"1\";\n                      }\n\n                      if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", true) || $(\"#allcheck\").is(\":checked\") == true) {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      } else {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      }\n                    }\n                  }\n\n                  Swal.fire('Unsubscribed!', 'Conatct has been unsubscribed', 'success');\n                  this.filterData();\n                }\n              });\n            }\n          });\n        } else {\n          Swal.fire({\n            title: this.archiveList.length + ' record selected !',\n            text: \"Are you sure want to blacklist!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Blacklist it!'\n          }).then(result => {\n            if (result.isConfirmed) {\n              let resp = this.conatctServicesService.blockArchiveContactList(this.archiveList, value);\n              resp.subscribe(data => {\n                if (data != 0) {\n                  // this.allContactPagination();\n                  for (let i in this.OrigincountViewList) {\n                    if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).is(\":checked\")) {\n                      if (value == \"archive\") {\n                        this.OrigincountViewList[i].archive = \"1\";\n                      }\n\n                      if (value == \"unsubscribe\") {\n                        this.OrigincountViewList[i].unsubscribed = \"1\";\n                      } else {\n                        this.OrigincountViewList[i].blacklist = \"1\";\n                      }\n\n                      if ($(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", true) || $(\"#allcheck\").is(\":checked\") == true) {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      } else {\n                        $(\"#check_\" + this.OrigincountViewList[i].customerClientId).prop(\"checked\", false);\n                        $(\"#allcheck\").prop(\"checked\", false);\n                      }\n                    }\n                  }\n\n                  Swal.fire('Blacklist!', 'Conatct has been blacklisted', 'success');\n                  this.filterData();\n                }\n              });\n            }\n          });\n        }\n      } else {\n        Swal.fire(\"Please select at least one contact!\");\n      }\n    }\n\n    download() {\n      this.customerClientList = [];\n      this.downloadCustomerData = [];\n\n      for (let i in this.countViewList) {\n        // this.customerClientList.dob = moment(this.alldownloadableData[i].dob).format('DD-MM-YYYY');\n        if (this.countclkId == \"allcount\" || this.countclkId == \"blackcount\") {\n          this.customerClientList = this.countViewList[i];\n          this.customerClientList.First_Name = this.countViewList[i].firstName;\n          this.customerClientList.Last_Name = this.countViewList[i].lastName;\n          this.customerClientList.Email_Address = this.countViewList[i].originalEmailId;\n\n          if (this.countViewList[i].mobileCountryCode != null) {\n            this.customerClientList.Country_Code = this.countViewList[i].mobileCountryCode;\n          } else {\n            this.customerClientList.Country_Code = \"\";\n          }\n\n          if (this.countViewList[i].mobileNo != null) {\n            this.customerClientList.Mobile_No = this.countViewList[i].mobileNo;\n          } else {\n            this.customerClientList.Mobile_No = \"\";\n          }\n\n          if (this.countViewList[i].dob != null) {\n            this.customerClientList.Date_of_birth = moment(this.countViewList[i].dob).format('DD-MM-yyyy');\n          } else {\n            this.customerClientList.Date_of_birth = \"\";\n          }\n\n          if (this.countViewList[i].city != null) {\n            this.customerClientList.City = this.countViewList[i].city;\n          } else {\n            this.customerClientList.City = \"\";\n          }\n\n          if (this.countViewList[i].companyName != null) {\n            this.customerClientList.Company_Name = this.countViewList[i].companyName;\n          } else {\n            this.customerClientList.Company_Name = \"\";\n          }\n\n          if (this.countViewList[i].blacklist == 1 || this.countViewList[i].blacklist == \"1\") {\n            this.customerClientList.Blacklist = this.countViewList[i].blacklist;\n            this.customerClientList.Blacklist = \"Y\";\n          } else {\n            this.customerClientList.Blacklist = \"N\";\n          }\n\n          if (this.countViewList[i].archive == 1 || this.countViewList[i].archive == \"1\") {\n            this.customerClientList.Archive = this.countViewList[i].archive;\n            this.customerClientList.Archive = \"Y\";\n          } else {\n            this.customerClientList.Archive = \"N\";\n          }\n\n          if (this.countViewList[i].unsubscribed == 1 || this.countViewList[i].unsubscribed == \"1\") {\n            this.customerClientList.Unsubscribed = this.countViewList[i].unsubscribed;\n            this.customerClientList.Unsubscribed = \"Y\";\n          } else {\n            this.customerClientList.Unsubscribed = \"N\";\n          }\n        } else {\n          this.customerClientList = this.countViewList[i];\n          this.customerClientList.First_Name = this.countViewList[i].firstName;\n          this.customerClientList.Last_Name = this.countViewList[i].lastName;\n          this.customerClientList.Email_Address = this.countViewList[i].originalEmailId;\n\n          if (this.countViewList[i].mobileCountryCode != null) {\n            this.customerClientList.Country_Code = this.countViewList[i].mobileCountryCode;\n          } else {\n            this.customerClientList.Country_Code = \"\";\n          }\n\n          if (this.countViewList[i].mobileNo != null) {\n            this.customerClientList.Mobile_No = this.countViewList[i].mobileNo;\n          } else {\n            this.customerClientList.Mobile_No = \"\";\n          }\n\n          if (this.countViewList[i].dob != null) {\n            this.customerClientList.Date_of_birth = moment(this.countViewList[i].dob).format('DD-MM-yyyy');\n          } else {\n            this.customerClientList.Date_of_birth = \"\";\n          }\n\n          if (this.countViewList[i].city != null) {\n            this.customerClientList.City = this.countViewList[i].city;\n          } else {\n            this.customerClientList.City = \"\";\n          }\n\n          if (this.countViewList[i].companyName != null) {\n            this.customerClientList.Company_Name = this.countViewList[i].companyName;\n          } else {\n            this.customerClientList.Company_Name = \"\";\n          }\n\n          if (this.countViewList[i].blacklist == 1 || this.countViewList[i].blacklist == \"1\") {\n            this.customerClientList.Blacklist = this.countViewList[i].blacklist;\n            this.customerClientList.Blacklist = \"Y\";\n          } else {\n            this.customerClientList.Blacklist = \"N\";\n          }\n\n          if (this.countViewList[i].archive == 1 || this.countViewList[i].archive == \"1\") {\n            this.customerClientList.Archive = this.countViewList[i].archive;\n            this.customerClientList.Archive = \"Y\";\n          } else {\n            this.customerClientList.Archive = \"N\";\n          }\n\n          if (this.countViewList[i].unsubscribed == 1 || this.countViewList[i].unsubscribed == \"1\") {\n            this.customerClientList.Unsubscribed = this.countViewList[i].unsubscribed;\n            this.customerClientList.Unsubscribed = \"Y\";\n          } else {\n            this.customerClientList.Unsubscribed = \"N\";\n          }\n        }\n\n        this.downloadCustomerData.push(this.customerClientList);\n      }\n\n      this.conatctServicesService.downloadCSVFile(this.downloadCustomerData, this.pageTitile);\n    }\n\n    exportAsXLSX() {\n      this.customerClientList = [];\n      this.downloadCustomerData = [];\n\n      for (let i in this.countViewList) {\n        this.customerClientList = {};\n\n        if (this.countclkId == \"allcount\" || this.countclkId == \"blackcount\") {\n          this.customerClientList.First_Name = this.countViewList[i].firstName;\n          this.customerClientList.Last_Name = this.countViewList[i].lastName;\n          this.customerClientList.Email_Address = this.countViewList[i].originalEmailId;\n\n          if (this.countViewList[i].mobileCountryCode != null) {\n            this.customerClientList.Country_Code = this.countViewList[i].mobileCountryCode;\n          } else {\n            this.customerClientList.Country_Code = \"\";\n          }\n\n          if (this.countViewList[i].mobileNo != null) {\n            this.customerClientList.Mobile_No = this.countViewList[i].mobileNo;\n          } else {\n            this.customerClientList.Mobile_No = \"\";\n          }\n\n          if (this.countViewList[i].dob != null) {\n            this.customerClientList.Date_of_birth = moment(this.countViewList[i].dob).format('YYYY-MM-DD');\n          } else {\n            this.customerClientList.Date_of_birth = null;\n          }\n\n          if (this.countViewList[i].city != null) {\n            this.customerClientList.City = this.countViewList[i].city;\n          } else {\n            this.customerClientList.City = \"\";\n          }\n\n          if (this.countViewList[i].companyName != null) {\n            this.customerClientList.Company_Name = this.countViewList[i].companyName;\n          } else {\n            this.customerClientList.Company_Name = \"\";\n          }\n\n          if (this.countViewList[i].blacklist == 1 || this.countViewList[i].blacklist == \"1\") {\n            this.customerClientList.Blacklist = this.countViewList[i].blacklist;\n            this.customerClientList.Blacklist = \"Y\";\n          } else {\n            this.customerClientList.Blacklist = \"N\";\n          }\n\n          if (this.countViewList[i].archive == 1 || this.countViewList[i].archive == \"1\") {\n            this.customerClientList.Archive = this.countViewList[i].archive;\n            this.customerClientList.Archive = \"Y\";\n          } else {\n            this.customerClientList.Archive = \"N\";\n          }\n\n          if (this.countViewList[i].unsubscribed == 1 || this.countViewList[i].unsubscribed == \"1\") {\n            this.customerClientList.Unsubscribed = this.countViewList[i].unsubscribed;\n            this.customerClientList.Unsubscribed = \"Y\";\n          } else {\n            this.customerClientList.Unsubscribed = \"N\";\n          }\n        } else {\n          this.customerClientList.First_Name = this.countViewList[i].firstName;\n          this.customerClientList.Last_Name = this.countViewList[i].lastName;\n          this.customerClientList.Email_Address = this.countViewList[i].originalEmailId;\n\n          if (this.countViewList[i].mobileCountryCode != null) {\n            this.customerClientList.Country_Code = this.countViewList[i].mobileCountryCode;\n          } else {\n            this.customerClientList.Country_Code = \"\";\n          }\n\n          if (this.countViewList[i].mobileNo != null) {\n            this.customerClientList.Mobile_No = this.countViewList[i].mobileNo;\n          } else {\n            this.customerClientList.Mobile_No = \"\";\n          }\n\n          if (this.countViewList[i].dob != null) {\n            this.customerClientList.Date_of_birth = moment(this.countViewList[i].dob).format('YYYY-MM-DD');\n          } else {\n            this.customerClientList.Date_of_birth = null;\n          }\n\n          if (this.countViewList[i].city != null) {\n            this.customerClientList.City = this.countViewList[i].city;\n          } else {\n            this.customerClientList.City = \"\";\n          }\n\n          if (this.countViewList[i].companyName != null) {\n            this.customerClientList.Company_Name = this.countViewList[i].companyName;\n          } else {\n            this.customerClientList.Company_Name = \"\";\n          }\n\n          if (this.countViewList[i].blacklist == 1 || this.countViewList[i].blacklist == \"1\") {\n            this.customerClientList.Blacklist = this.countViewList[i].blacklist;\n            this.customerClientList.Blacklist = \"Y\";\n          } else {\n            this.customerClientList.Blacklist = \"N\";\n          }\n\n          if (this.countViewList[i].archive == 1 || this.countViewList[i].archive == \"1\") {\n            this.customerClientList.Archive = this.countViewList[i].archive;\n            this.customerClientList.Archive = \"Y\";\n          } else {\n            this.customerClientList.Archive = \"N\";\n          }\n\n          if (this.countViewList[i].unsubscribed == 1 || this.countViewList[i].unsubscribed == \"1\") {\n            this.customerClientList.Unsubscribed = this.countViewList[i].unsubscribed;\n            this.customerClientList.Unsubscribed = \"Y\";\n          } else {\n            this.customerClientList.Unsubscribed = \"N\";\n          }\n        }\n\n        this.downloadCustomerData.push(this.customerClientList);\n      }\n\n      this.conatctServicesService.exportAsExcelFile(this.downloadCustomerData, this.pageTitile);\n    }\n\n    organise(arr) {\n      var headers = [],\n          // an Array to let us lookup indicies by group\n      objs = [],\n          // the Object we want to create\n      i,\n          j;\n\n      for (i = 0; i < arr.length; ++i) {\n        j = headers.indexOf(arr[i].id); // lookup\n\n        if (j === -1) {\n          // this entry does not exist yet, init\n          j = headers.length;\n          headers[j] = arr[i].id;\n          objs[j] = {};\n          objs[j].id = arr[i].id;\n          objs[j].this.downloadCustomerData = [];\n        }\n\n        objs[j].this.downloadCustomerData;\n      }\n\n      return objs;\n    }\n\n    activeDeactive() {\n      if (this.activedeactive == 0) {\n        Swal.fire(\"Please select file type\");\n      }\n\n      if (this.activedeactive == 1) {\n        this.download();\n      }\n\n      if (this.activedeactive == 2) {\n        this.exportAsXLSX();\n      }\n    }\n\n    delete() {\n      this.deletecontact = {};\n      this.deletecontactList = []; // console.log(this.countViewList);\n\n      for (let i in this.countViewList) {\n        if ($(\"#check_\" + this.countViewList[i].customerClientId).is(\":checked\")) {\n          this.deletecontact.listId = JSON.parse(JSON.stringify(this.countViewList[i].listId));\n          this.deletecontact.customerClientId = JSON.parse(JSON.stringify(this.countViewList[i].customerClientId));\n          this.deletecontact.customerId = sessionStorage.getItem(\"customerId\");\n          this.deletecontactList.push(JSON.parse(JSON.stringify(this.deletecontact)));\n        }\n      } // console.log(this.deletecontactList);\n\n\n      Swal.fire({\n        title: this.deletecontactList.length + ' record selected !',\n        text: \"Are you sure want to delete!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, Delete it!'\n      }).then(result => {\n        if (result.isConfirmed) {\n          let resp = this.conatctServicesService.deleteContact(this.deletecontactList);\n          resp.subscribe(data => {\n            if (data != 0) {\n              for (let i in this.countViewList) {\n                for (let k in this.deletecontactList) {\n                  if (this.deletecontactList[k].customerClientId === this.countViewList[i].customerClientId) {\n                    this.countViewList.splice(i, 1);\n                  }\n                }\n              }\n\n              for (let i in this.OrigincountViewList) {\n                for (let k in this.deletecontactList) {\n                  if (this.deletecontactList[k].customerClientId === this.OrigincountViewList[i].customerClientId) {\n                    this.OrigincountViewList.splice(i, 1);\n                  }\n                }\n              }\n\n              Swal.fire('Delete!', 'Conatct has been deleted', 'success');\n            }\n          });\n        }\n      });\n    }\n\n  }\n\n  CountallContactComponent.ɵfac = function CountallContactComponent_Factory(t) {\n    return new (t || CountallContactComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ProfileServicesService), i0.ɵɵdirectiveInject(i3.PreviewService), i0.ɵɵdirectiveInject(i4.ConatctServicesService));\n  };\n\n  CountallContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountallContactComponent,\n    selectors: [[\"app-countall-contact\"]],\n    decls: 55,\n    vars: 24,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"mb-2\", \"font-20\"], [1, \"card-header\"], [\"type\", \"text\", \"name\", \"search\", \"placeholder\", \"\\uF002 Search\", 1, \"form-control\", \"float-right\", \"w-25\", 2, \"font-family\", \"Arial, FontAwesome\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"mt-4\"], [1, \"col-md-7\", \"font-20\"], [1, \"search-button\", \"pl-5\", \"ml-2\", \"d-flex\"], [\"type\", \"checkbox\", \"id\", \"allcheck\", \"class\", \"form-check-input \", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-1 ml-2\", 4, \"ngIf\"], [\"type\", \" submit\", \"class\", \"btn btn-info ml-1\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-info ml-3\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-info ml-3 size\", 3, \"click\", 4, \"ngIf\"], [1, \"col-md-2\"], [\"class\", \"dropdown float-right\", 4, \"ngIf\"], [1, \"col-md-3\"], [\"class\", \" dropdown d-flex float-right\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\", \"table-bordered\", \"mt-2\", \"tacho-table\"], [1, \"bg-dark\"], [\"class\", \"text-center\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"mt-2\", \"col-xs-2\"], [1, \"col-md-4\", \"mt-2\"], [1, \"show-rows\"], [\"type\", \"number\", \"min\", \"1\", \"name\", \"rowsPerPage\", \"pattern\", \"^[1-9][0-9]*$\", \"placeholder\", \"Rows\", 1, \"rowsPerPage\", \"ml-2\", 3, \"ngModel\", \"ngModelChange\"], [\"rowsPerPage\", \"ngModel\"], [1, \"col-md-8\"], [1, \"float-right\", \"mt-2\"], [3, \"pageChange\"], [\"type\", \"checkbox\", \"id\", \"allcheck\", 1, \"form-check-input\", 3, \"click\"], [1, \"p-1\", \"ml-2\"], [\"type\", \" submit\", 1, \"btn\", \"btn-info\", \"ml-1\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"ml-3\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"ml-3\", \"size\", 3, \"click\"], [1, \"dropdown\", \"float-right\"], [1, \"d-flex\"], [\"for\", \"exampleFormControlSelect1\", 1, \"pt-1\"], [\"id\", \"exampleFormControlSelect1\", 1, \"form-control\", \"ml-2\", \"select\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"Archive\"], [\"value\", \"Blacklist\"], [\"value\", \"Unsubscribe\"], [1, \"dropdown\", \"d-flex\", \"float-right\"], [\"id\", \"exampleFormControlSelect1\", 1, \"form-control\", \"ml-2\", \"height\", \"select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"0\", \"disabled\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"class\", \"btn btn-info ml-3 btn-md size\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-info ml-3 btn-sm\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-info\", \"ml-3\", \"btn-md\", \"size\", 3, \"click\"], [1, \"spinner-border\", 2, \"height\", \"15px\", \"width\", \"15px\"], [1, \"btn\", \"btn-info\", \"ml-3\", \"btn-sm\", 3, \"click\"], [1, \"text-center\"], [1, \"noBorder\"], [1, \"text-danger\"], [1, \"d-flex\", \"justify-content-center\", \"text-danger\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [3, \"click\"], [1, \"text-primary\", \"cursor\", 3, \"click\"], [\"type\", \"checkbox\", \"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"click\"], [\"class\", \"help-bpx\", \"class\", \"help-bpx\", \"style\", \"color: red;\", 4, \"ngIf\"], [1, \"help-bpx\", 2, \"color\", \"red\"]],\n    template: function CountallContactComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"strong\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CountallContactComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.search = $event;\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵtemplate(10, CountallContactComponent_input_10_Template, 1, 0, \"input\", 8);\n        i0.ɵɵtemplate(11, CountallContactComponent_strong_11_Template, 2, 0, \"strong\", 9);\n        i0.ɵɵtemplate(12, CountallContactComponent_button_12_Template, 3, 0, \"button\", 10);\n        i0.ɵɵtemplate(13, CountallContactComponent_button_13_Template, 3, 0, \"button\", 11);\n        i0.ɵɵtemplate(14, CountallContactComponent_button_14_Template, 3, 0, \"button\", 12);\n        i0.ɵɵtemplate(15, CountallContactComponent_button_15_Template, 3, 0, \"button\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtemplate(17, CountallContactComponent_div_17_Template, 14, 1, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 15);\n        i0.ɵɵtemplate(19, CountallContactComponent_div_19_Template, 11, 3, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 17)(21, \"table\", 18)(22, \"thead\", 19)(23, \"tr\");\n        i0.ɵɵtemplate(24, CountallContactComponent_th_24_Template, 2, 0, \"th\", 20);\n        i0.ɵɵelementStart(25, \"th\");\n        i0.ɵɵtext(26, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵtext(28, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32, \"Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\");\n        i0.ɵɵtext(34, \"Blacklist\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Archive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵtext(38, \"Unsubscribe\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"tbody\");\n        i0.ɵɵtemplate(40, CountallContactComponent_tr_40_Template, 16, 0, \"tr\", 21);\n        i0.ɵɵtemplate(41, CountallContactComponent_tr_41_Template, 17, 13, \"tr\", 22);\n        i0.ɵɵpipe(42, \"paginate\");\n        i0.ɵɵpipe(43, \"filter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"div\", 23)(45, \"div\", 24)(46, \"div\", 25)(47, \"span\");\n        i0.ɵɵtext(48, \"Show Records\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"input\", 26, 27);\n        i0.ɵɵlistener(\"ngModelChange\", function CountallContactComponent_Template_input_ngModelChange_49_listener($event) {\n          return ctx.showData.rowsPerPage = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(51, CountallContactComponent_div_51_Template, 2, 1, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 28)(53, \"div\", 29)(54, \"pagination-controls\", 30);\n        i0.ɵɵlistener(\"pageChange\", function CountallContactComponent_Template_pagination_controls_pageChange_54_listener($event) {\n          return ctx.p = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r11 = i0.ɵɵreference(50);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.pageTitile);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.search);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0 && ctx.filterFlg != \"Blacklist\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0 && ctx.filterFlg != \"Archive\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0 && ctx.filterFlg != \"Unsubscribe\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.countViewList != null && ctx.countViewList.length != 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\" && ctx.OrigincountViewList != null && ctx.OrigincountViewList.length != 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.countViewList != null && ctx.countViewList.length != 0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.countclkId == \"allcount\");\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", ctx.OrigincountViewList == null || ctx.OrigincountViewList.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(42, 15, i0.ɵɵpipeBind2(43, 18, ctx.countViewList, ctx.search), i0.ɵɵpureFunction2(21, _c0, ctx.showData.rowsPerPage, ctx.p)));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.showData.rowsPerPage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r11.invalid || _r11.touched);\n      }\n    },\n    directives: [i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.NgIf, i5.SelectControlValueAccessor, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.NgForOf, i5.MinValidator, i5.NumberValueAccessor, i5.PatternValidator, i7.PaginationControlsComponent],\n    pipes: [i7.PaginatePipe, i8.Ng2SearchPipe],\n    styles: [\".align[_ngcontent-%COMP%]{align-items:center}.noBorder[_ngcontent-%COMP%]{border:0}.height[_ngcontent-%COMP%]{height:30px}.size[_ngcontent-%COMP%]{height:30px;width:90px}.select[_ngcontent-%COMP%]{width:130px;height:30px}\"]\n  });\n  return CountallContactComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}