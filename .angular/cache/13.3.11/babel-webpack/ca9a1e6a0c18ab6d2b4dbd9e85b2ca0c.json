{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../contact-management-service/conatct-services.service\";\nimport * as i4 from \"src/app/account-management/account-services/account-services.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"ng2-search-filter\";\nconst _c0 = [\"closenewListModal\"];\n\nfunction AddContactComponent_div_24_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \"Please enter email address!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_24_div_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \" Please enter valid email address!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_24_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵtemplate(2, AddContactComponent_div_24_div_1_p_2_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(23);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_24_div_1_Template, 3, 2, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(23);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_31_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \" Please enter valid first name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_31_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(30);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_31_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(30);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_38_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \" Please enter valid last name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_38_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r5 = i0.ɵɵreference(37);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_38_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(37);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 67);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", p_r32.mobileCountryCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", p_r32.mobileCountryCode, \" \", p_r32.countryName, \"\");\n  }\n}\n\nfunction AddContactComponent_div_52_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \"Please enter valid mobile number!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_52_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_52_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r9 = i0.ɵɵreference(51);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r9.errors == null ? null : _r9.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_52_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r9 = i0.ɵɵreference(51);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r9.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_62_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 69);\n    i0.ɵɵtext(1, \"Please select valid date!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_62_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_62_div_1_p_1_Template, 2, 0, \"p\", 68);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r35.dobflag == 1);\n  }\n}\n\nfunction AddContactComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_62_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r11 = i0.ɵɵreference(61);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r11.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_69_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \" Please enter valid city!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_69_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_69_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r13 = i0.ɵɵreference(68);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r13.errors == null ? null : _r13.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_69_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r13 = i0.ɵɵreference(68);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r13.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_76_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \" Please enter valid company name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_76_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_76_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r15 = i0.ɵɵreference(75);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r15.errors == null ? null : _r15.errors.pattern);\n  }\n}\n\nfunction AddContactComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_76_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r15 = i0.ɵɵreference(75);\n\n    const _r0 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r15.touched || _r0.submitted);\n  }\n}\n\nfunction AddContactComponent_div_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 70)(1, \"div\", 71)(2, \"span\", 72)(3, \"h5\");\n    i0.ɵɵtext(4, \"Please wait.....\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"div\", 73)(7, \"div\", 74)(8, \"span\", 75);\n    i0.ɵɵtext(9, \"Please wait\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\", 75);\n    i0.ɵɵtext(11, \"Loading...\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\n\nfunction AddContactComponent_div_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 70)(1, \"div\", 71)(2, \"div\", 76)(3, \"h5\");\n    i0.ɵɵtext(4, \"No list to show\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\n\nfunction AddContactComponent_div_89_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 77)(1, \"label\")(2, \"input\", 78);\n    i0.ɵɵlistener(\"change\", function AddContactComponent_div_89_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const data_r41 = restoredCtx.$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.getCount(data_r41);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const data_r41 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", data_r41.listId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r41.listName);\n  }\n}\n\nfunction AddContactComponent_div_119_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \"Please enter valid list name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_119_div_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 66);\n    i0.ɵɵtext(1, \"Please enter list name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddContactComponent_div_119_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_119_div_1_p_1_Template, 2, 0, \"p\", 65);\n    i0.ɵɵtemplate(2, AddContactComponent_div_119_div_1_p_2_Template, 2, 0, \"p\", 65);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r21 = i0.ɵɵreference(118);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r21.errors == null ? null : _r21.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r21.errors == null ? null : _r21.errors.required);\n  }\n}\n\nfunction AddContactComponent_div_119_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddContactComponent_div_119_div_1_Template, 3, 2, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r21 = i0.ɵɵreference(118);\n\n    const _r20 = i0.ɵɵreference(106);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r21.touched || _r20.submitted);\n  }\n}\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  onOpen: toast => {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n});\nexport let AddContactComponent = /*#__PURE__*/(() => {\n  class AddContactComponent {\n    constructor(router, location, conatctServicesService, datepipe, accountServicesService) {\n      this.router = router;\n      this.location = location;\n      this.conatctServicesService = conatctServicesService;\n      this.datepipe = datepipe;\n      this.accountServicesService = accountServicesService;\n      this.avilable = false;\n      this.OriginlistData = [];\n      this.contactList = [];\n      this.editMode = false;\n      this.dismiss = false;\n      this.dobflag = 0;\n      this.nodataFlg = false;\n      this.submitFlg = false;\n      this.balance = [];\n      this.contactInfo = {\n        originalEmailId: \"\",\n        mobileNo: \"\",\n        mobileCountryCode: \"\",\n        dob: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        companyName: \"\",\n        city: \"\",\n        listId: \"\",\n        update: \"\"\n      };\n      this.listInfo = {\n        listDescription: \"\",\n        listName: \"\",\n        listId: \"\"\n      };\n    }\n\n    ngOnInit() {\n      this.getAllListDetails();\n      this.customerId = sessionStorage.getItem(\"customerId\");\n      this.mobileCountryCode();\n      this.dismiss = true;\n      this.getProduct();\n    } // form submit \n\n\n    saveList(createList) {\n      this.submitFlg = true;\n      this.closenewListModal.nativeElement.click();\n      document.getElementById('newList').click();\n      this.listInfo.customerId = sessionStorage.getItem('customerId');\n\n      if (this.listInfo.listName != null && this.listInfo.listName != undefined && this.listInfo.listName != \"\") {\n        this.saveListDetails();\n      }\n\n      createList.resetForm();\n    }\n\n    getProduct() {\n      let resp = this.accountServicesService.getBalanceDetails(sessionStorage.getItem(\"customerId\"));\n      resp.subscribe(data => {\n        if (data != null) {\n          this.balance = data;\n        }\n      });\n    }\n\n    saveaddContact(addContact) {\n      var flg = 0;\n      this.contactList = [];\n\n      for (let i in this.OriginlistData) {\n        if ($('#' + this.OriginlistData[i].listId).is(\":checked\")) {\n          flg = 1;\n          this.contactInfo.listId = JSON.parse(JSON.stringify(this.OriginlistData[i].listId));\n          this.contactInfo.customerId = this.customerId;\n          this.contactList.push(JSON.parse(JSON.stringify(this.contactInfo)));\n        }\n      }\n\n      if (flg == 1) {\n        if (this.balance.length != 0 && this.balance.dimProduct.productName == 'Premium') {\n          Swal.fire({\n            title: 'Do you want to verify email address?',\n            showDenyButton: true,\n            showCancelButton: true,\n            confirmButtonText: `Yes`,\n            denyButtonText: `No`,\n            showLoaderOnConfirm: true\n          }).then(result => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n              Swal.fire({\n                title: \"Please wait while we're verifying!\",\n                allowEscapeKey: false,\n                allowOutsideClick: false,\n                onOpen: () => {\n                  Swal.showLoading();\n                }\n              });\n              let resp = this.conatctServicesService.getMailIdVerification(this.contactInfo.originalEmailId);\n              resp.subscribe(data => {\n                if (data != 'null' && data != null) {\n                  if (data == 0) {\n                    Swal.fire({\n                      title: 'Invalid email address',\n                      text: 'Do you want to save it?',\n                      showDenyButton: true,\n                      showCancelButton: false,\n                      confirmButtonText: `Yes`,\n                      denyButtonText: `No`\n                    }).then(result => {\n                      if (result.isConfirmed) {\n                        this.submitFlg = true;\n                        let resp = this.conatctServicesService.saveaddContact(this.contactList);\n                        resp.subscribe(data => {\n                          if (data == 2) {\n                            Swal.fire({\n                              position: 'center',\n                              icon: 'error',\n                              title: 'Failed to store details!',\n                              showConfirmButton: false,\n                              timer: 4500\n                            });\n                          } else {\n                            this.submitFlg = false;\n                            Toast.fire({\n                              icon: 'success',\n                              title: 'Contact added succesfully'\n                            });\n                            this.clearUser();\n                            addContact.resetForm();\n                          }\n\n                          this.avilable = false;\n                        }); // Swal.fire('Contact Saved', 'Email-id not verified', 'success')\n                      } else if (result.isDenied) {\n                        this.avilable = false;\n                        this.clearUser();\n                        addContact.resetForm();\n                        Swal.fire('Contact details discarded', '', 'info');\n                      } // else if (result.isDismissed) {\n                      //   this.avilable = false;\n                      //   this.clearUser();\n                      //   addContact.resetForm();\n                      //   Swal.fire('Contact details discarded', '', 'info')\n                      // }\n\n                    });\n                  } else if (data == 2) {\n                    var email = this.contactInfo.originalEmailId;\n                    var name = email.substring(0, email.lastIndexOf(\"@\"));\n                    var domain = email.substring(email.lastIndexOf(\"@\") + 1);\n                    Swal.fire({\n                      title: 'Unknown username -' + '(' + name + ')',\n                      text: 'Do you want to save it?',\n                      footer: domain + \" is valid but can't identify \" + name,\n                      showDenyButton: true,\n                      showCancelButton: false,\n                      confirmButtonText: `Yes`,\n                      denyButtonText: `No`\n                    }).then(result => {\n                      if (result.isConfirmed) {\n                        this.submitFlg = true;\n                        let resp = this.conatctServicesService.saveaddContact(this.contactList);\n                        resp.subscribe(data => {\n                          if (data == 2) {\n                            Swal.fire({\n                              position: 'center',\n                              icon: 'error',\n                              title: 'Failed to store details!',\n                              showConfirmButton: false,\n                              timer: 4500\n                            });\n                          } else {\n                            this.submitFlg = false;\n                            Toast.fire({\n                              icon: 'success',\n                              title: 'Contact added succesfully'\n                            });\n                            this.clearUser();\n                            addContact.resetForm();\n                          }\n\n                          this.avilable = false;\n                        }); // Swal.fire('Contact Saved', 'Email-id not verified', 'success')\n                      } else if (result.isDenied) {\n                        this.avilable = false;\n                        this.clearUser();\n                        addContact.resetForm();\n                        Swal.fire('Contact details discarded', '', 'info');\n                      } // else if (result.isDismissed) {\n                      //   this.avilable = false;\n                      //   this.clearUser();\n                      //   addContact.resetForm();\n                      //   Swal.fire('Contact details discarded', '', 'info')\n                      // }\n\n                    });\n                  } else if (data == 1) {\n                    Swal.fire({\n                      title: 'Valid email address',\n                      text: 'Do you want to save it?',\n                      showDenyButton: true,\n                      showCancelButton: false,\n                      confirmButtonText: `Yes`,\n                      denyButtonText: `No`\n                    }).then(result => {\n                      if (result.isConfirmed) {\n                        this.submitFlg = true;\n                        let resp = this.conatctServicesService.saveaddContact(this.contactList);\n                        resp.subscribe(data => {\n                          if (data == 2) {\n                            Swal.fire({\n                              position: 'center',\n                              icon: 'error',\n                              title: 'Failed to store details!',\n                              showConfirmButton: false,\n                              timer: 4500\n                            });\n                          } else {\n                            this.submitFlg = false;\n                            Toast.fire({\n                              icon: 'success',\n                              title: 'Contact added succesfully'\n                            });\n                            this.clearUser();\n                            addContact.resetForm();\n                          }\n\n                          this.avilable = false;\n                        });\n                      } else if (result.isDenied) {\n                        this.avilable = false;\n                        this.clearUser();\n                        addContact.resetForm();\n                        Swal.fire('Contact details discarded', '', 'info');\n                      } // else if (result.isDismissed) {\n                      //   this.avilable = false;\n                      //   this.clearUser();\n                      //   addContact.resetForm();\n                      //   Swal.fire('Contact details discarded', '', 'info')\n                      // }\n\n                    });\n                  }\n                }\n              });\n            } else if (result.isDenied) {\n              this.submitFlg = true;\n              let resp = this.conatctServicesService.saveaddContact(this.contactList);\n              resp.subscribe(data => {\n                if (data == 2) {\n                  Swal.fire({\n                    position: 'center',\n                    icon: 'error',\n                    title: 'Failed to store details!',\n                    showConfirmButton: false,\n                    timer: 4500\n                  });\n                } else {\n                  this.submitFlg = false;\n                  Toast.fire({\n                    icon: 'success',\n                    title: 'Contact added succesfully'\n                  });\n                  this.clearUser();\n                  addContact.resetForm();\n                }\n\n                this.avilable = false;\n              }); // Swal.fire('Contact Saved', 'Email-id not verified', 'success')\n            } else if (result.isDismissed) {\n              this.avilable = false;\n              this.clearUser();\n              addContact.resetForm();\n              Swal.fire('Contact details discarded', '', 'info');\n            }\n          });\n        } else {\n          this.submitFlg = true;\n          let resp = this.conatctServicesService.saveaddContact(this.contactList);\n          resp.subscribe(data => {\n            if (data == 2) {\n              Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: 'Failed to store details!',\n                showConfirmButton: false,\n                timer: 4500\n              });\n            } else {\n              this.submitFlg = false;\n              Toast.fire({\n                icon: 'success',\n                title: 'Contact added succesfully'\n              });\n              this.clearUser();\n              addContact.resetForm();\n            }\n\n            this.avilable = false;\n          });\n        }\n      } else {\n        Swal.fire(\"Please select atleast one list!\");\n      }\n    }\n\n    saveListDetails() {\n      let resp = this.conatctServicesService.createList(this.listInfo);\n      resp.subscribe(data => {\n        if (data != null || data != 0 || data != '0') {\n          this.submitFlg = false;\n          Toast.fire({\n            icon: 'success',\n            title: 'New list added succesfully'\n          });\n          this.getAllListDetails();\n        }\n\n        this.listInfo.listName = \"\";\n        this.listInfo.listDescription = \"\";\n      });\n    }\n\n    getAllListDetails() {\n      this.OriginlistData = [];\n      this.nodataFlg = false;\n      let resp = this.conatctServicesService.getAllListDetails(sessionStorage.getItem('customerId'));\n      resp.subscribe(data => {\n        if (data != null && data != \"\") {\n          for (let i in data) {\n            if (data[i].status == '1') {\n              this.OriginlistData.push(data[i]);\n            }\n          } // console.log(this.OriginlistData);\n\n        } else {\n          this.nodataFlg = true;\n        }\n      });\n    }\n\n    checkDuplicateList(listName) {\n      //if(this.listInfo.listName != null && this.listInfo.listName!=undefined && this.listInfo.listName!=\"\"){\n      let resp = this.conatctServicesService.checkDuplicateList(listName, sessionStorage.getItem('customerId'));\n      resp.subscribe(data => {\n        if (data == '1' || data == 1) {\n          Swal.fire(\"This list name already exists!\");\n          this.listInfo.listName = \"\";\n        }\n      }); // }\n    } // chk unique Email\n\n\n    getUniqueCustClient(originalEmailId) {\n      this.avilable = false;\n      let resp = this.conatctServicesService.getUniqueCustClient(originalEmailId);\n      resp.subscribe(data => {\n        if (data != null && data != '') {\n          this.avilable = true;\n          this.contactInfo = data;\n          this.contactInfo.dob = this.datepipe.transform(data.dob, \"yyyy-MM-dd\");\n        } else {\n          this.avilable = false;\n        }\n      });\n    }\n\n    ListIdData(ListId, i) {\n      this.listId = ListId;\n    }\n\n    clear() {\n      this.editMode = false;\n      this.listInfo.listDescription = \"\", this.listInfo.listName = \"\", this.listInfo.listId = \"\";\n    }\n\n    redirectToImportContact() {\n      this.router.navigate(['/import-contact']);\n    }\n\n    redirectTocreateList() {\n      this.router.navigate(['/create-list']);\n    }\n\n    clearUser() {\n      for (let r in this.OriginlistData) {\n        $('#' + this.OriginlistData[r].listId).prop(\"checked\", false);\n      }\n\n      this.editMode = false;\n      this.contactList.customerClientSkey = \"\", this.contactList.customerClientId = \"\";\n    }\n\n    mobileCountryCode() {\n      let resp = this.conatctServicesService.mobileCountryCode();\n      resp.subscribe(data => {\n        this.mobilecodeList = data;\n      });\n    }\n\n    compareAge() {\n      let dob = this.contactInfo.dob;\n      let db = moment(dob).format(\"YYYY-MM-DD\");\n      let today = new Date();\n      let temp = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());\n      let store = moment(temp).format(\"YYYY-MM-DD\");\n\n      if (db <= store) {\n        this.dobflag = 0;\n        return {};\n      } else {\n        this.dobflag = 1;\n      }\n    }\n\n    getCount(data) {\n      if (data.contactCount > 20000) {\n        Swal.fire(\"This list is full!\");\n        $('#' + data.listId).prop(\"checked\", false);\n      }\n    }\n\n    verifyContact() {\n      // console.log(this.contactInfo.originalEmailId, '**');\n      if (this.contactInfo.originalEmailId != null || this.contactInfo.originalEmailId != \"\" || this.contactInfo.originalEmailId != undefined) {\n        Swal.fire({\n          title: 'Do you want to verify email address?',\n          showDenyButton: true,\n          showCancelButton: true,\n          confirmButtonText: `Yes`,\n          denyButtonText: `No`\n        }).then(result => {\n          /* Read more about isConfirmed, isDenied below */\n          if (result.isConfirmed) {\n            Swal.fire('Saved!', '', 'success');\n          } else if (result.isDenied) {\n            Swal.fire('Contact Saved', 'Email-id not verified', 'success');\n          } else if (result.isDismissed) {\n            this.clearUser();\n            Swal.fire('Contact details discarded', '', 'info');\n          }\n        });\n      }\n    }\n\n  }\n\n  AddContactComponent.ɵfac = function AddContactComponent_Factory(t) {\n    return new (t || AddContactComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.ConatctServicesService), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i4.AccountServicesService));\n  };\n\n  AddContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddContactComponent,\n    selectors: [[\"app-add-contact\"]],\n    viewQuery: function AddContactComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closenewListModal = _t.first);\n      }\n    },\n    decls: 145,\n    vars: 30,\n    consts: [[1, \"card\", \"mb-2\"], [1, \"card-header\"], [3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", \"float-right\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-upload\", \"mr-2\"], [1, \"card-body\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 1, \"w-100\", \"addContactform\", 3, \"ngSubmit\"], [\"addContact\", \"ngForm\"], [1, \"row\", \"mt-4\"], [1, \"col-md-6\", \"table-responsive\"], [1, \"table\"], [1, \"width-left\"], [1, \"required-field\", \"text-danger\"], [\"type\", \"email\", \"pattern\", \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,5}$\", \"placeholder\", \"Email Address\", \"name\", \"originalEmailId\", \"required\", \"\", 1, \"form-control\", \"mb-2\", \"mr-sm-2\", 3, \"disabled\", \"ngModel\", \"ngModelChange\", \"change\"], [\"originalEmailId\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"First Name\", \"id\", \"firstName\", \"pattern\", \"[a-zA-Z][a-zA-Z ]+\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"id\", \"lastName\", \"pattern\", \"[a-zA-Z][a-zA-Z ]+\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [1, \"form-group\"], [1, \"d-flex\"], [\"name\", \"mobileCountryCode\", \"id\", \"mobileCountryCode\", 1, \"form-control\", \"col-sm-4\", 3, \"ngModel\", \"ngModelChange\"], [\"mobileCountryCode\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Enter Mobile\", \"pattern\", \"[1-9]{1}[0-9]{9}\", \"name\", \"mobileNo\", 1, \"form-control\", \"mb-2\", 3, \"ngModel\", \"ngModelChange\"], [\"mobileNo\", \"ngModel\"], [1, \"table\", \"mb-0\"], [\"name\", \"dob\", \"type\", \"date\", \"value\", \"2011-08-19\", \"id\", \"dob\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"dob\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"City\", \"id\", \"city\", \"pattern\", \"[a-zA-Z][a-zA-Z ]+\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"city\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \" Company Name\", \"id\", \"companyName\", \"pattern\", \"[ a-zA-Z0-9][a-zA-Z0-9 ]+\", \"name\", \"companyName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"companyName\", \"ngModel\"], [1, \"card\", \"mt-4\"], [1, \"float-right\", \"width-400\"], [1, \"search-button\"], [\"type\", \"text\", \"name\", \"search\", \"placeholder\", \"\\uF002 Search\", 1, \"form-control\", 2, \"font-family\", \"Arial, FontAwesome\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"scroll-y\"], [\"class\", \"align\", 4, \"ngIf\"], [1, \"col-md-12\", \"column\"], [\"class\", \"checkbox\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#newList\", \"data-backdrop\", \"false\", 1, \"btn\", \"btn-info\", \"mr-3\", \"float-right\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-plus\", \"mr-2\"], [\"id\", \"newList\", 1, \"modal\"], [1, \"modal-dialog\", \"modal-xl\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"close\"], [1, \"modal-body\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 1, \"w-100\", \"createlistform\", 3, \"keydown.enter\", \"ngSubmit\"], [\"createList\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"List Name\", \"id\", \"listName\", \"name\", \"listName\", \"required\", \"\", \"pattern\", \"[A-Za-z][A-Za-z0-9 $&+,:;=?@#|'<>.^*()%!-_]+\", 1, \"form-control\", 3, \"disabled\", \"ngModel\", \"change\", \"ngModelChange\"], [\"listName\", \"ngModel\"], [\"rows\", \"4\", \"id\", \"desc\", \"pattern\", \"^[a-zA-Z0-9_ !@#$%^&*()_+\\\\-=\\\\[\\\\]{};':\\\\\\\\|,.<>\\\\/?]*$\", \"placeholder\", \"Enter Description\", \"ng-maxlength\", \"255\", \"name\", \"listDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"listDescription\", \"ngModel\"], [1, \"col-md-12\", \"text-center\", \"mt-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"mr-3\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"closenewListModal\", \"\"], [1, \"card-footer\", \"p-4\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"mr-3\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"mr-3\", 3, \"click\"], [\"class\", \"help-box\", 4, \"ngIf\"], [1, \"help-box\"], [3, \"value\"], [\"class\", \"help-bpx\", \"style\", \"color: red;\", 4, \"ngIf\"], [1, \"help-bpx\", 2, \"color\", \"red\"], [1, \"align\"], [1, \"noBorder\", \"align\"], [1, \"text-danger\"], [1, \"d-flex\", \"justify-content-center\", \"text-danger\", \"align\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"d-flex\", \"justify-content-center\", \"text-danger\"], [1, \"checkbox\"], [\"type\", \"checkbox\", 1, \"mr-2\", 3, \"id\", \"change\"]],\n    template: function AddContactComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r48 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"strong\");\n        i0.ɵɵtext(3, \"Contact Management > Add Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function AddContactComponent_Template_a_click_4_listener() {\n          return ctx.redirectToImportContact();\n        });\n        i0.ɵɵelementStart(5, \"button\", 3)(6, \"strong\");\n        i0.ɵɵelement(7, \"i\", 4);\n        i0.ɵɵtext(8, \"Import Contact\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function AddContactComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r48);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return _r0.form.valid && ctx.saveaddContact(_r0);\n        });\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"table\", 10)(15, \"tbody\")(16, \"tr\")(17, \"td\", 11);\n        i0.ɵɵtext(18, \"Email Address\");\n        i0.ɵɵelementStart(19, \"span\", 12);\n        i0.ɵɵtext(20, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"td\")(22, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.contactInfo.originalEmailId = $event;\n        })(\"change\", function AddContactComponent_Template_input_change_22_listener() {\n          i0.ɵɵrestoreView(_r48);\n\n          const _r1 = i0.ɵɵreference(23);\n\n          return ctx.getUniqueCustClient(_r1.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, AddContactComponent_div_24_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 11);\n        i0.ɵɵtext(27, \"First Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"td\")(29, \"input\", 16, 17);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.contactInfo.firstName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, AddContactComponent_div_31_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"tr\")(33, \"td\", 11);\n        i0.ɵɵtext(34, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"td\")(36, \"input\", 18, 19);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_36_listener($event) {\n          return ctx.contactInfo.lastName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, AddContactComponent_div_38_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"tr\")(40, \"td\", 11);\n        i0.ɵɵtext(41, \"Mobile No.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"td\")(43, \"div\", 20)(44, \"div\", 21)(45, \"select\", 22, 23);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_select_ngModelChange_45_listener($event) {\n          return ctx.contactInfo.mobileCountryCode = $event;\n        });\n        i0.ɵɵelementStart(47, \"option\", 24);\n        i0.ɵɵtext(48, \"Code \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, AddContactComponent_option_49_Template, 2, 3, \"option\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"input\", 26, 27);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_50_listener($event) {\n          return ctx.contactInfo.mobileNo = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(52, AddContactComponent_div_52_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(53, \"div\", 9)(54, \"table\", 28)(55, \"tbody\")(56, \"tr\")(57, \"td\", 11);\n        i0.ɵɵtext(58, \"Date of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"td\")(60, \"input\", 29, 30);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_60_listener($event) {\n          return ctx.contactInfo.dob = $event;\n        })(\"change\", function AddContactComponent_Template_input_change_60_listener() {\n          return ctx.compareAge();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(62, AddContactComponent_div_62_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(63, \"tr\")(64, \"td\", 11);\n        i0.ɵɵtext(65, \"City \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"td\")(67, \"input\", 31, 32);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_67_listener($event) {\n          return ctx.contactInfo.city = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(69, AddContactComponent_div_69_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"tr\")(71, \"td\", 11);\n        i0.ɵɵtext(72, \"Company Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"td\")(74, \"input\", 33, 34);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_74_listener($event) {\n          return ctx.contactInfo.companyName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(76, AddContactComponent_div_76_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(77, \"div\", 35)(78, \"div\", 1)(79, \"strong\");\n        i0.ɵɵtext(80, \"Select List to Add Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"div\", 36)(82, \"div\", 37)(83, \"input\", 38);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_83_listener($event) {\n          return ctx.search = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(84, \"div\", 5)(85, \"div\", 39);\n        i0.ɵɵtemplate(86, AddContactComponent_div_86_Template, 12, 0, \"div\", 40);\n        i0.ɵɵtemplate(87, AddContactComponent_div_87_Template, 5, 0, \"div\", 40);\n        i0.ɵɵelementStart(88, \"div\", 41);\n        i0.ɵɵtemplate(89, AddContactComponent_div_89_Template, 4, 2, \"div\", 42);\n        i0.ɵɵpipe(90, \"filter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(91, \"button\", 43);\n        i0.ɵɵelement(92, \"i\", 44);\n        i0.ɵɵelementStart(93, \"strong\");\n        i0.ɵɵtext(94, \"Add New List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(95, \"div\", 45)(96, \"div\", 46)(97, \"div\", 47)(98, \"div\", 48)(99, \"h4\", 49)(100, \"strong\");\n        i0.ɵɵtext(101, \"Add New List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(102, \"button\", 50);\n        i0.ɵɵtext(103, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(104, \"div\", 51)(105, \"form\", 52, 53);\n        i0.ɵɵlistener(\"keydown.enter\", function AddContactComponent_Template_form_keydown_enter_105_listener($event) {\n          return $event.preventDefault();\n        })(\"ngSubmit\", function AddContactComponent_Template_form_ngSubmit_105_listener() {\n          i0.ɵɵrestoreView(_r48);\n\n          const _r20 = i0.ɵɵreference(106);\n\n          return _r20.form.valid && ctx.saveList(_r20);\n        });\n        i0.ɵɵelementStart(107, \"div\", 8)(108, \"div\", 9)(109, \"table\", 10)(110, \"tbody\")(111, \"tr\")(112, \"td\");\n        i0.ɵɵtext(113, \" Name \");\n        i0.ɵɵelementStart(114, \"span\", 12);\n        i0.ɵɵtext(115, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(116, \"td\")(117, \"input\", 54, 55);\n        i0.ɵɵlistener(\"change\", function AddContactComponent_Template_input_change_117_listener() {\n          i0.ɵɵrestoreView(_r48);\n\n          const _r21 = i0.ɵɵreference(118);\n\n          return ctx.checkDuplicateList(_r21.value);\n        })(\"ngModelChange\", function AddContactComponent_Template_input_ngModelChange_117_listener($event) {\n          return ctx.listInfo.listName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(119, AddContactComponent_div_119_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(120, \"div\", 9)(121, \"table\", 28)(122, \"tbody\")(123, \"tr\")(124, \"td\");\n        i0.ɵɵtext(125, \" Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"td\")(127, \"textarea\", 56, 57);\n        i0.ɵɵlistener(\"ngModelChange\", function AddContactComponent_Template_textarea_ngModelChange_127_listener($event) {\n          return ctx.listInfo.listDescription = $event;\n        });\n        i0.ɵɵtext(129, \" \");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(130, \"div\", 58)(131, \"button\", 59)(132, \"strong\");\n        i0.ɵɵtext(133, \"Save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(134, \"button\", 60, 61);\n        i0.ɵɵlistener(\"click\", function AddContactComponent_Template_button_click_134_listener() {\n          i0.ɵɵrestoreView(_r48);\n\n          const _r20 = i0.ɵɵreference(106);\n\n          return _r20.reset;\n        });\n        i0.ɵɵelementStart(136, \"strong\");\n        i0.ɵɵtext(137, \" Cancel \");\n        i0.ɵɵelementEnd()()()()()()()()()();\n        i0.ɵɵelementStart(138, \"div\", 62)(139, \"button\", 63)(140, \"strong\");\n        i0.ɵɵtext(141, \" Save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(142, \"button\", 64);\n        i0.ɵɵlistener(\"click\", function AddContactComponent_Template_button_click_142_listener() {\n          return ctx.redirectTocreateList();\n        });\n        i0.ɵɵelementStart(143, \"strong\");\n        i0.ɵɵtext(144, \" Cancel\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n\n        const _r1 = i0.ɵɵreference(23);\n\n        const _r3 = i0.ɵɵreference(30);\n\n        const _r5 = i0.ɵɵreference(37);\n\n        const _r9 = i0.ɵɵreference(51);\n\n        const _r11 = i0.ɵɵreference(61);\n\n        const _r13 = i0.ɵɵreference(68);\n\n        const _r15 = i0.ɵɵreference(75);\n\n        const _r20 = i0.ɵɵreference(106);\n\n        const _r21 = i0.ɵɵreference(118);\n\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"disabled\", ctx.avilable)(\"ngModel\", ctx.contactInfo.originalEmailId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r1.invalid || _r1.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.firstName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r3.invalid || _r3.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.lastName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r5.invalid || _r5.touched);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.mobileCountryCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.mobilecodeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.mobileNo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r9.invalid || _r9.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.dob);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r11.invalid || _r11.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.city);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r13.invalid || _r13.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contactInfo.companyName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r15.invalid || _r15.touched);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.search);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.OriginlistData == null || ctx.OriginlistData.length == 0 && ctx.nodataFlg == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nodataFlg == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(90, 27, ctx.OriginlistData, ctx.search));\n        i0.ɵɵadvance(28);\n        i0.ɵɵproperty(\"disabled\", ctx.editMode)(\"ngModel\", ctx.listInfo.listName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r20.submitted && _r21.invalid || _r21.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.listInfo.listDescription);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.submitFlg);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.submitFlg);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.PatternValidator, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i2.NgIf, i5.SelectControlValueAccessor, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i2.NgForOf],\n    pipes: [i6.Ng2SearchPipe],\n    styles: [\".addContactform[_ngcontent-%COMP%]   .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:0}.modal.show[_ngcontent-%COMP%]{background-color:#48494a40!important;padding-top:22%}.scroll-y[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto}.width-400[_ngcontent-%COMP%]{width:400px}input[type=checkbox][_ngcontent-%COMP%]{width:15px;height:15px}.width-left[_ngcontent-%COMP%]{width:146px}.column[_ngcontent-%COMP%]{-moz-column-count:3;column-count:3}.align[_ngcontent-%COMP%]{margin:auto;width:35%}\"]\n  });\n  return AddContactComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}