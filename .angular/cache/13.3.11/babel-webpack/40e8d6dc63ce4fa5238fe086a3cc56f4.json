{"ast":null,"code":"import { GlobalConstantsService } from 'src/app/GobalAPIService/global-constants.service';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProfileServicesService = /*#__PURE__*/(() => {\n  class ProfileServicesService {\n    constructor(http) {\n      this.http = http;\n      this.subject = new Subject();\n      this.uri = GlobalConstantsService.apiURL;\n      this.secureUri = GlobalConstantsService.secureApiURL;\n    }\n\n    getProfileDetails(customerSkey) {\n      return this.http.get(`${this.secureUri}/login/getProfileDetails/` + customerSkey);\n    }\n\n    saveProfileDetails(userInfo) {\n      return this.http.post(`${this.secureUri}/login/saveProfileDetails`, userInfo);\n    }\n\n    getProfileImage(customerSkey) {\n      if (customerSkey != null && customerSkey != \"\") {\n        return this.http.get(`${this.secureUri}/login/getProfileImage/` + customerSkey);\n      }\n    }\n\n    uploadProfilePic(file) {\n      console.log(sessionStorage.getItem(\"customerSkey\"));\n      const fd = new FormData();\n      fd.append('file', file);\n      return this.http.post(`${this.secureUri}/login/uploadProfilePic/` + sessionStorage.getItem(\"customerSkey\"), fd);\n    }\n\n    getMessage() {\n      return this.subject.asObservable();\n    }\n\n    setMessage(message) {\n      this.subject.next({\n        text: message\n      });\n    }\n\n    getdisable() {\n      return this.subject.asObservable();\n    }\n\n    setdisable(message) {\n      this.subject.next({\n        text: message\n      });\n    }\n\n    getdashboardCount(customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardCount/` + customerId);\n    }\n\n    getdashboardAllContact(firstId, lastId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardAllContact/` + firstId + \"/\" + lastId + \"/\" + customerId);\n    }\n\n    getdashboardOpenContact(firstId, lastId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardOpenContact/` + firstId + \"/\" + lastId + \"/\" + customerId);\n    }\n\n    getdashboardClickContact(firstId, lastId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardClickContact/` + firstId + \"/\" + lastId + \"/\" + customerId);\n    }\n\n    getdashboardBlacklistedContact(firstId, lastId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardBlacklistedContact/` + firstId + \"/\" + lastId + \"/\" + customerId);\n    }\n\n    getdashboardhardBounceContact(firstId, lastId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardhardBounceContact/` + firstId + \"/\" + lastId + \"/\" + customerId);\n    }\n\n    ArchiveCampaign(archiveList) {\n      return this.http.post(`${this.secureUri}/dashboard/archiveDashboardContact`, archiveList);\n    }\n\n    getMapMaxAndMin(customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getMapMaxAndMin/` + customerId);\n    }\n\n    getMapMaxAndMinDashboard(countClickId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getMapMaxAndMinDashboard/` + countClickId + \"/\" + customerId);\n    }\n\n    getdashboardCampData(campaignId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardCampData/` + campaignId + \"/\" + customerId);\n    }\n\n    getdashboardCampHistoryData(campaignId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardCampHistoryData/` + campaignId + \"/\" + customerId);\n    }\n\n    getdashboardCampName(processId, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getdashboardCampName/` + processId + \"/\" + customerId);\n    }\n\n    getPaginationdashboardAllContact(pageNo, size, customerId) {\n      return this.http.get(`${this.secureUri}/dashboard/getPaginationdashboardAllContact/` + pageNo + \"/\" + size + \"/\" + customerId);\n    }\n\n    getCurrentSubscriptionDetails(customerId) {\n      return this.http.get(`${this.secureUri}/product/getCurrentSubscriptionDetails/` + customerId);\n    }\n\n  }\n\n  ProfileServicesService.ɵfac = function ProfileServicesService_Factory(t) {\n    return new (t || ProfileServicesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProfileServicesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileServicesService,\n    factory: ProfileServicesService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProfileServicesService;\n})();","map":null,"metadata":{},"sourceType":"module"}