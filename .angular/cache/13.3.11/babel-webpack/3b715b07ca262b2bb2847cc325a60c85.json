{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/auth/auth-services/auth-services.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authenticationService) {\n      // console.log(\"hihiihihih\");\n      this.router = router;\n      this.authenticationService = authenticationService;\n    }\n\n    canActivate(route, state) {\n      if (this.authenticationService.isUserLogin()) {\n        // console.log(\"true\");\n        return true;\n      } else {\n        // not logged in so redirect to login page with the return url\n        // console.log(\"false\");\n        // this.router.events.subscribe(event => {\n        // if (event instanceof NavigationEnd) {\n        if (this.router.url != \"/login\" && this.router.url != \"/forgot-password\" && !this.router.url.includes(\"/unsubscribe\") && !this.router.url.includes(\"/reset-password\") && this.router.url != \"/\" && !this.router.url.includes(\"/sign-up\")) {\n          // if (sessionStorage.getItem(\"customerId\") === null || sessionStorage.getItem(\"customerId\") === undefined || sessionStorage.getItem(\"customerId\") === 'null' || sessionStorage.getItem(\"customerId\") === \"\"\n          //     || sessionStorage.getItem(\"tokenNo\") === null || sessionStorage.getItem(\"tokenNo\") === undefined || sessionStorage.getItem(\"tokenNo\") === 'null' || sessionStorage.getItem(\"tokenNo\") === \"\") {\n          this.authenticationService.redirectToLogin(); // }\n        } // }\n        // });\n        // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n\n\n        this.authenticationService.redirectToLogin();\n        return false;\n      }\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthServicesService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}