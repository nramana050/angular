{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../email-management-service/email-manaement.service\";\nimport * as i4 from \"src/app/GobalAPIService/global-service-service/PreviewService\";\nimport * as i5 from \"@angular/forms\";\n\nfunction CreateProcessComponent_div_23_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \"Please enter name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateProcessComponent_div_23_div_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Please enter valid name!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateProcessComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateProcessComponent_div_23_div_1_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, CreateProcessComponent_div_23_div_1_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(22);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.pattern);\n  }\n}\n\nfunction CreateProcessComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateProcessComponent_div_23_div_1_Template, 3, 2, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(22);\n\n    const _r0 = i0.ɵɵreference(8);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.touched || _r0.submitted);\n  }\n}\n\nfunction CreateProcessComponent_div_31_div_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Description size should be less than 250 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateProcessComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateProcessComponent_div_31_div_1_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r8.processInfo.processDescription == null ? null : ctx_r8.processInfo.processDescription.length) > 250);\n  }\n}\n\nfunction CreateProcessComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateProcessComponent_div_31_div_1_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(29);\n\n    const _r0 = i0.ɵɵreference(8);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.touched || _r0.submitted);\n  }\n}\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  onOpen: toast => {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n});\nexport let CreateProcessComponent = /*#__PURE__*/(() => {\n  class CreateProcessComponent {\n    constructor(router, location, emailservice, previewService) {\n      this.router = router;\n      this.location = location;\n      this.emailservice = emailservice;\n      this.previewService = previewService;\n      this.changeFlg = false;\n      this.submitFlg = false;\n      this.btnName = \"Save\";\n      this.pageName = \"Create\";\n      this.processInfo = {\n        processName: \"\",\n        processDescription: \"\",\n        customerId: \"\"\n      };\n      this.campProcessRouting = [];\n      this.changeFlg = false;\n\n      if (this.previewService.selecteProcessIdList != \"\" && this.previewService.selecteProcessIdList != null && this.previewService.selecteProcessIdList != undefined) {\n        this.processData = this.previewService.selecteProcessIdList;\n        this.btnName = \"Update\";\n        this.pageName = \"Edit\";\n        this.changeFlg = true;\n        this.processInfo.processName = this.processData.processName;\n        this.processInfo.processDescription = this.processData.processDescription;\n      }\n\n      if (this.previewService.campaignRouting != null && this.previewService.campaignRouting != undefined && this.previewService.selectedCampaignIdListRouting != null) {\n        this.campaignRouting = this.previewService.campaignRouting;\n        this.campProcessData = this.previewService.selectedCampaignIdListRouting;\n        this.campProcessRouting = this.previewService.selectedroutingList;\n      }\n    }\n\n    ngOnInit() {}\n\n    redirectToprocess() {\n      if (this.campaignRouting == \"campDashboard\") {\n        this.previewService.selectedCampaignIdListRouting = this.campProcessData;\n        this.previewService.selectedroutingList = this.campProcessRouting;\n        this.router.navigate(['/create-campaign']);\n      } else {\n        this.router.navigate(['/process-management']);\n      }\n    } // form submit \n\n\n    CreateProcess(createProcess) {\n      this.submitFlg = true;\n      this.changeFlg = false;\n\n      if (this.processData != null) {\n        this.processInfo.processSkey = this.processData.processSkey;\n        this.processInfo.processId = this.processData.processId;\n        this.processInfo.createdDate = this.processData.createdDate;\n        this.processInfo.status = this.processData.status;\n      }\n\n      let resp = this.emailservice.saveCreateProcess(this.processInfo);\n      resp.subscribe(data => {\n        this.submitFlg = false;\n        this.processInfo.processName = \"\";\n        this.processInfo.processDescription = \"\"; //createProcess.resetForm();\n\n        if (data == 1 || data == '1' && data.modifiedDate == null) {\n          if (this.pageName.includes(\"Edit\")) {\n            Toast.fire({\n              icon: 'success',\n              title: 'Process updated successfully.'\n            });\n          } else {\n            Toast.fire({\n              icon: 'success',\n              title: 'Process created successfully.'\n            });\n          }\n        }\n\n        if (this.campaignRouting == \"campDashboard\") {\n          this.previewService.selectedCampaignIdListRouting = this.campProcessData;\n          this.previewService.selectedroutingList = this.campProcessRouting;\n          this.router.navigate(['/create-campaign']);\n        } else {\n          this.router.navigate(['/process-management']);\n        }\n      });\n    }\n\n    getUniqueProcessName(processName) {\n      let resp = this.emailservice.getUniqueProcessName(processName);\n      resp.subscribe(data => {\n        if (data != null && data != '') {\n          this.processInfo.processName = \"\";\n          Swal.fire(\"Process name already exists!\");\n        }\n      });\n    }\n\n  }\n\n  CreateProcessComponent.ɵfac = function CreateProcessComponent_Factory(t) {\n    return new (t || CreateProcessComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.EmailManaementService), i0.ɵɵdirectiveInject(i4.PreviewService));\n  };\n\n  CreateProcessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateProcessComponent,\n    selectors: [[\"app-create-process\"]],\n    decls: 40,\n    vars: 8,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"mb-2\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 1, \"w-100\", 3, \"ngSubmit\"], [\"createProcess\", \"ngForm\"], [1, \"row\", \"mt-4\"], [1, \"col-md-6\"], [1, \"table-responsive\"], [1, \"table\"], [1, \"required-field\", \"text-danger\"], [\"type\", \"text\", \"placeholder\", \"Process Name\", \"id\", \"processName\", \"pattern\", \"[A-Za-z][A-Za-z0-9 $&+,:;=?@#|'<>.^*()%!-_]+\", \"name\", \"processName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"change\"], [\"processName\", \"ngModel\"], [4, \"ngIf\"], [\"rows\", \"4\", \"id\", \"processDescription\", \"pattern\", \"^[a-zA-Z0-9\\\\x22_ !@#$%^&*()_+\\\\-=\\\\[\\\\]{};':\\\\\\\\|,.<>\\\\/?]*$\", \"placeholder\", \"Enter Description\", \"maxlength\", \"250\", \"name\", \"processDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"processDescription\", \"ngModel\"], [1, \"text-center\", \"mt-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"mr-3\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [3, \"click\"], [\"class\", \"help-box\", 4, \"ngIf\"], [1, \"help-box\"]],\n    template: function CreateProcessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"strong\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateProcessComponent_Template_form_ngSubmit_7_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(8);\n\n          return _r0.form.valid && ctx.CreateProcess(_r0);\n        });\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9)(13, \"table\", 10)(14, \"tbody\")(15, \"tr\")(16, \"td\");\n        i0.ɵɵtext(17, \" Name \");\n        i0.ɵɵelementStart(18, \"span\", 11);\n        i0.ɵɵtext(19, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"td\")(21, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateProcessComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.processInfo.processName = $event;\n        })(\"change\", function CreateProcessComponent_Template_input_change_21_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r1 = i0.ɵɵreference(22);\n\n          return ctx.getUniqueProcessName(_r1.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, CreateProcessComponent_div_23_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"tr\")(25, \"td\");\n        i0.ɵɵtext(26, \" Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"td\")(28, \"textarea\", 15, 16);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateProcessComponent_Template_textarea_ngModelChange_28_listener($event) {\n          return ctx.processInfo.processDescription = $event;\n        });\n        i0.ɵɵtext(30, \" \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, CreateProcessComponent_div_31_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(32, \"div\", 17)(33, \"button\", 18)(34, \"strong\");\n        i0.ɵɵtext(35);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"button\", 19)(37, \"strong\")(38, \"a\", 20);\n        i0.ɵɵlistener(\"click\", function CreateProcessComponent_Template_a_click_38_listener() {\n          return ctx.redirectToprocess();\n        });\n        i0.ɵɵtext(39, \" Cancel \");\n        i0.ɵɵelementEnd()()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        const _r1 = i0.ɵɵreference(22);\n\n        const _r3 = i0.ɵɵreference(29);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.pageName, \" Process\");\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngModel\", ctx.processInfo.processName)(\"disabled\", ctx.changeFlg === true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r1.invalid || _r1.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.processInfo.processDescription);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r3.invalid || _r3.touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.submitFlg);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.btnName, \" \");\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.PatternValidator, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i2.NgIf, i5.MaxLengthValidator],\n    styles: [\".table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:0}\"]\n  });\n  return CreateProcessComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}