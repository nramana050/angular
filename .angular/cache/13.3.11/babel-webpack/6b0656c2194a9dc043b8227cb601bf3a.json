{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../auth-services/auth-services.service\";\nimport * as i4 from \"@angular/forms\";\n\nfunction ResetPasswordComponent_div_10_div_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter Password!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_10_div_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"Please enter atleast one alphabets(Upper Case Letter, one lower case letter) ,One Number and one special character - Length min 8\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_10_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_10_div_9_span_1_Template, 2, 0, \"span\", 22);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_10_div_9_span_2_Template, 2, 0, \"span\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.pattern);\n  }\n}\n\nfunction ResetPasswordComponent_div_10_div_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"Confirm password is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_10_div_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \"Password & confirm password does not match!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResetPasswordComponent_div_10_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_10_div_18_span_1_Template, 2, 0, \"span\", 24);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_10_div_18_span_2_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.required && _r5.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.pattern);\n  }\n}\n\nfunction ResetPasswordComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 9)(2, \"div\", 10)(3, \"span\", 11);\n    i0.ɵɵelement(4, \"i\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 13, 14);\n    i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_div_10_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.user.password = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_div_10_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.showPassword1();\n    });\n    i0.ɵɵelement(8, \"span\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, ResetPasswordComponent_div_10_div_9_Template, 3, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10)(12, \"span\", 11);\n    i0.ɵɵelement(13, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 18, 19);\n    i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_div_10_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.user.password1 = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_div_10_Template_div_click_16_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.showPassword();\n    });\n    i0.ɵɵelement(17, \"span\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, ResetPasswordComponent_div_10_div_18_Template, 3, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 20)(20, \"button\", 21)(21, \"strong\");\n    i0.ɵɵtext(22, \"Reset Password \");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(6);\n\n    const _r5 = i0.ɵɵreference(15);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"type\", ctx_r1.show_button1 ? \"text\" : \"password\")(\"ngModel\", ctx_r1.user.password);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMap(ctx_r1.show_eye1 ? \"fa fa-eye pt-2 px-2\" : \"fa fa-eye-slash pt-2 px-2\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"pattern\", _r3.value);\n    i0.ɵɵproperty(\"type\", ctx_r1.show_button ? \"text\" : \"password\")(\"ngModel\", ctx_r1.user.password1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMap(ctx_r1.show_eye ? \"fa fa-eye pt-2 px-2\" : \"fa fa-eye-slash pt-2 px-2\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !_r0.valid);\n  }\n}\n\nfunction ResetPasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \" Ohh!!! The link in email is either expired or already used. This password link was valid for 24 hours only.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \" No worries, just click on below button and receive the new password reset link on\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 26)(6, \"b\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 27)(9, \"input\", 28);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_div_11_Template_input_click_9_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.forgotPass();\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r2.user.email);\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(router, location, authServicesService) {\n      this.router = router;\n      this.location = location;\n      this.authServicesService = authServicesService;\n      this.show_button = false;\n      this.show_button1 = false;\n      this.show_eye = false;\n      this.show_eye1 = false;\n      this.errorFlag = false;\n      this.forgot = {\n        requestURI: '',\n        userName: ''\n      }; //Function\n\n      this.user = {\n        email: \"\",\n        custIdKey: '',\n        custId: '',\n        userId: '',\n        password: \"\",\n        password1: \"\",\n        userUniqueKey: '',\n        userName: '',\n        oldPassword1: ''\n      };\n    }\n\n    ngOnInit() {\n      this.value = window.location.href.split(\"?\");\n      this.user.email = this.value[1].split(\":\")[1].split(\"%20\")[0];\n      this.skey = this.value[1].split(\":\")[2];\n      this.user.custIdKey = this.skey.replace('=', '');\n      this.emailCheckgenratepassword();\n    }\n\n    showPassword() {\n      this.show_button = !this.show_button;\n      this.show_eye = !this.show_eye;\n    }\n\n    showPassword1() {\n      this.show_button1 = !this.show_button1;\n      this.show_eye1 = !this.show_eye1;\n    }\n\n    checkPasswords(group) {\n      let pass = group.get('password').value;\n      let confirmPass = group.get('password').value;\n      return pass === confirmPass ? null : {\n        notSame: true\n      };\n    }\n\n    emailCheckgenratepassword() {\n      this.user.userUniqueKey = this.user.custIdKey;\n      this.user.userName = this.user.email;\n      let resp = this.authServicesService.emailCheckgenratepassword(this.user);\n      resp.subscribe(data => {\n        if (data >= 1) {\n          this.errorFlag = false;\n          this.user.custId = data;\n        } else {\n          this.errorFlag = true;\n        }\n      });\n    }\n\n    genratePassword(genratePasswordform) {\n      this.user.userUniqueKey = this.user.custIdKey;\n      this.user.oldPassword1 = this.user.password;\n      this.user.userName = this.user.email;\n      this.user.userId = this.user.custId;\n      let resp = this.authServicesService.genratePassword(this.user);\n      resp.subscribe(data => {\n        genratePasswordform.reset();\n        this.authServicesService.redirectToLogin();\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: 'Password Reset Successfully',\n          showConfirmButton: false,\n          timer: 4500\n        });\n      });\n    } // forgot link\n\n\n    forgotPass() {\n      this.forgot.userName = this.user.email;\n      this.forgot.requestURI = this.value[0];\n      let resp = this.authServicesService.forgotPass(this.forgot);\n      resp.subscribe(data => {\n        if (data != null && data != \"\" && data != 0) {\n          this.authServicesService.redirectToLogin();\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'The Reset Password link send on your email address!',\n            showConfirmButton: false,\n            timer: 4500\n          });\n        }\n      });\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.AuthServicesService));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"mt-5\"], [1, \"auth-width\"], [1, \"card\", \"form-bg\"], [1, \"card-header\"], [1, \"formHeading\", \"text-center\", \"text-secondary\", \"mt-4\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"genratePasswordform\", \"ngForm\"], [4, \"ngIf\"], [1, \"form-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"text\", \"bg-danger\", \"text-light\"], [1, \"fa\", \"fa-unlock-alt\"], [\"autocomplete\", \"off\", \"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter password\", \"oncopy\", \"return false\", \"onpaste\", \"return false\", \"data-toggle\", \"password\", \"required\", \"\", \"autocomplete\", \"new-password\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\", \"required\", \"\", 1, \"form-control\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"input-group-addon\", 2, \"background-color\", \"#d9d9d9\", 3, \"click\"], [1, \"form-control-append\", 2, \"background-color\", \"#d9d9d9 !important\", \"color\", \"black !important\", \"width\", \"35px\"], [1, \"fa\", \"fa-unlock\"], [\"type\", \"password\", \"name\", \"password1\", \"id\", \"password1\", \"required\", \"\", \"placeholder\", \"Confirm Password\", \"oncopy\", \"return false\", \"onpaste\", \"return false\", \"required\", \"\", 1, \"form-control\", 3, \"type\", \"ngModel\", \"pattern\", \"ngModelChange\"], [\"password1\", \"ngModel\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"mg-t-10\", \"mt-3\", 3, \"disabled\"], [\"class\", \"help-box\", 4, \"ngIf\"], [1, \"help-box\"], [\"class\", \"help-bpx\", \"style\", \"color: red; font-size: 9pt;\", 4, \"ngIf\"], [1, \"help-bpx\", 2, \"color\", \"red\", \"font-size\", \"9pt\"], [1, \"ml-20\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", \"value\", \"Reset My Password\", 1, \"btn\", \"btn-info\", \"mg-t-10\", 3, \"click\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r18 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4)(5, \"strong\");\n        i0.ɵɵtext(6, \"Reset Password \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_8_listener() {\n          i0.ɵɵrestoreView(_r18);\n\n          const _r0 = i0.ɵɵreference(9);\n\n          return _r0.form.valid && ctx.genratePassword(_r0);\n        });\n        i0.ɵɵtemplate(10, ResetPasswordComponent_div_10_Template, 23, 12, \"div\", 8);\n        i0.ɵɵtemplate(11, ResetPasswordComponent_div_11_Template, 10, 1, \"div\", 8);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", !ctx.errorFlag);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorFlag);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i2.NgIf, i4.DefaultValueAccessor, i4.RequiredValidator, i4.PatternValidator, i4.NgControlStatus, i4.NgModel],\n    styles: [\"\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}