{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { GlobalConstantsService } from 'src/app/GobalAPIService/global-constants.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AccountServicesService = /*#__PURE__*/(() => {\n  class AccountServicesService {\n    constructor(http) {\n      this.http = http;\n      this.uri = GlobalConstantsService.apiURL;\n      this.secureUri = GlobalConstantsService.secureApiURL;\n      this.customerId = sessionStorage.getItem(\"customerId\");\n    }\n\n    firstCharge(StripCustomer) {\n      return this.http.post(`${this.secureUri}/pay/firstCharge`, StripCustomer);\n    }\n\n    getMainProductList(productType, countryCode) {\n      return this.http.get(`${this.secureUri}/product/getMainProductList/` + productType + \"/\" + countryCode);\n    }\n\n    getSubProductList(productType, productName, countryCode) {\n      return this.http.get(`${this.secureUri}/product/getSubProductList/` + productType + \"/\" + productName + \"/\" + countryCode);\n    }\n\n    getSendAndUploadCount(customerId) {\n      return this.http.get(`${this.secureUri}/product/getSendAndUploadCount/` + customerId);\n    }\n\n    getBalanceDetails(customerId) {\n      return this.http.get(`${this.secureUri}/product/getBalanceDetails/` + customerId);\n    }\n\n    saveComapnyDetails(billingInfo) {\n      return this.http.post(`${this.secureUri}/login/saveComapnyDetails`, billingInfo);\n    }\n\n    savePaymentEntity(factPaymentEntity) {\n      return this.http.post(`${this.secureUri}/subscription/savePaymentEntity`, factPaymentEntity);\n    }\n\n    getProductInfo(productCode, countryCode) {\n      return this.http.get(`${this.secureUri}/product/getProductInfo/` + productCode + \"/\" + countryCode);\n    }\n\n    downgradePlan(factActivity) {\n      return this.http.post(`${this.secureUri}/subscription/downgradePlan`, factActivity);\n    }\n\n    switchCard(personalInfo) {\n      return this.http.post(`${this.secureUri}/pay/switchCard`, personalInfo);\n    }\n\n    updateStripCustId(stripCustId, customerId) {\n      return this.http.get(`${this.secureUri}/subscription/updateStripCustId/` + stripCustId + \"/\" + customerId);\n    }\n\n    getActivity(customerId) {\n      return this.http.get(`${this.secureUri}/subscription/getActivity/` + customerId);\n    }\n\n    cancelRequest(factActivity) {\n      return this.http.post(`${this.secureUri}/subscription/cancelRequest`, factActivity);\n    }\n\n    addOnsavePaymentEntity(factPaymentEntity) {\n      return this.http.post(`${this.secureUri}/subscription/addOnsavePaymentEntity`, factPaymentEntity);\n    }\n\n    pauseSubscription(pauseDuration, customerId) {\n      return this.http.get(`${this.secureUri}/subscription/pauseSubscription/` + pauseDuration + \"/\" + customerId);\n    }\n\n    pauseSubscriptionNextDueDate(pauseDuration, customerId) {\n      return this.http.get(`${this.secureUri}/subscription/pauseSubscriptionNextDueDate/` + pauseDuration + \"/\" + customerId);\n    }\n\n    closeSubscription(customerId) {\n      return this.http.get(`${this.secureUri}/subscription/closeSubscription/` + customerId);\n    }\n\n    transaction(customerId) {\n      return this.http.get(`${this.secureUri}/subscription/transaction/` + customerId);\n    }\n\n    resumeSubscription(data) {\n      return this.http.post(`${this.secureUri}/subscription/resumeSubscription`, data);\n    }\n\n    subscriptionCron() {\n      return this.http.get(`${this.secureUri}/subscription/cron/activityDowngridePlan`);\n    }\n\n    checkActivity(data) {\n      return this.http.post(`${this.secureUri}/subscription/checkActivity`, data);\n    }\n\n    billingDetailForm(data) {\n      return this.http.post(`${this.secureUri}/subscription/billingDetail`, data);\n    }\n\n    billId(customerId) {\n      return this.http.get(`${this.secureUri}/subscription/billId/` + customerId);\n    }\n\n    createBill(invoiceId) {\n      // return this.http.get<any>(`${this.uri}/subscription/createBill/`+ invoiceId)\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        responseType: 'blob'\n      });\n      return this.http.get(`${this.secureUri}/subscription/createBill/` + invoiceId, {\n        headers: headers,\n        responseType: 'blob'\n      });\n    }\n\n    getCurrentSubscriptionDetails(customerId) {\n      return this.http.get(`${this.secureUri}/product/getCurrentSubscriptionDetails/` + customerId);\n    }\n\n  }\n\n  AccountServicesService.ɵfac = function AccountServicesService_Factory(t) {\n    return new (t || AccountServicesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AccountServicesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountServicesService,\n    factory: AccountServicesService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountServicesService;\n})();","map":null,"metadata":{},"sourceType":"module"}